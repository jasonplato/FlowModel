{"remainingRequest":"/Users/wangxufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js!/Users/wangxufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangxufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangxufei/Desktop/FlowModel/src/components/Template/MintForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangxufei/Desktop/FlowModel/src/components/Template/MintForm.vue","mtime":1652163070436},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubGFzdC1pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvd2FuZ3h1ZmVpL0Rlc2t0b3AvRmxvd01vZGVsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHBkZiBmcm9tICJ2dWUtcGRmIjsKaW1wb3J0IHsgbWludG5mdCB9IGZyb20gIi4uLy4uL2FwaS9pbmRleCI7CmltcG9ydCB7IGNyZWF0ZU5GVCB9IGZyb20gIi4uLy4uL2FwaS93ZWIzL2NvbnRyYWN0cyI7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCI7CmltcG9ydCB7IGdldFN0b3JlIH0gZnJvbSAiLi4vLi4vdXRpbHMvc3RvcmFnZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWyJjbG9zZSJdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWdBcnI6IFtdLAogICAgICBhbGxvd0FkZEltZzogdHJ1ZSwKICAgICAgbGFiZWxQb3NpdGlvbjogInRvcCIsCiAgICAgIGRpYWxvZ0ltYWdlVXJsOiAiIiwKICAgICAgLy9maWxlTGlzdDogW10sCiAgICAgIHBkZlVybDogIiIsCiAgICAgIG51bVBhZ2VzOiBbXSwKICAgICAgLy8gZmlsZUFycjogW10sCiAgICAgIHVwTG9hZEltZ1VybDogIiIsCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBydWxlRm9ybTogewogICAgICAgIG5hbWU6ICIiLAogICAgICAgIGRlc2M6ICIiIC8vIGluY2x1ZGU6IGZhbHNlLAogICAgICAgIC8vIGV4bGluazogIiIsCgogICAgICB9LAogICAgICBydWxlczogewogICAgICAgIG5hbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICJQbGVhc2UgRW50ZXIgTW9kZWwgTmFtZSIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDMsCiAgICAgICAgICBtYXg6IDE1LAogICAgICAgICAgbWVzc2FnZTogIjMgdG8gMTUgY2hhcmFjdGVycyBsb25nIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH1dLAogICAgICAgIGRlc2M6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICJQbGVhc2UgRW50ZXIgTW9kZWwgRGVzY3JpcHRpb24iLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfSwgewogICAgICAgICAgbWluOiAzLAogICAgICAgICAgbWF4OiAxNTAsCiAgICAgICAgICBtZXNzYWdlOiAiMyB0byAxNTAgY2hhcmFjdGVycyBsb25nIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH1dLAogICAgICAgIGV4bGluazogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIlBsZWFzZSBFbnRlciBFeHRlcm5hbCBMaW5rIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogMTAsCiAgICAgICAgICBtYXg6IDIwMCwKICAgICAgICAgIG1lc3NhZ2U6ICIxMCB0byAyMDAgY2hhcmFjdGVycyBsb25nIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH1dIC8vIGV4bGluazogWwogICAgICAgIC8vICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIlBsZWFzZSBFbnRlciBFeHRlcm5hbCBMaW5rIiwgdHJpZ2dlcjogImJsdXIiIH0sCiAgICAgICAgLy8gICB7CiAgICAgICAgLy8gICAgIG1pbjogMTAsCiAgICAgICAgLy8gICAgIG1heDogMjAwLAogICAgICAgIC8vICAgICBtZXNzYWdlOiAiMTAgdG8gMjAwIGNoYXJhY3RlcnMgbG9uZyIsCiAgICAgICAgLy8gICAgIHRyaWdnZXI6ICJibHVyIiwKICAgICAgICAvLyAgIH0sCiAgICAgICAgLy8gXSwKCiAgICAgIH0sCiAgICAgIG1pbnRSZXN1bHQ6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgcGRmOiBwZGYKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbInVzZXIiLCAic3RhdHVzQ29kZSIsICJjb25maWdEYXRhIiwgImhpc3RvcnlTaW11bGF0ZURhdGEiXSkpLAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdEZvcm06IGZ1bmN0aW9uIHN1Ym1pdEZvcm0oZm9ybU5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUoZnVuY3Rpb24gKHZhbGlkKSB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBhbGVydCgic3VibWl0ISIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiZXJyb3Igc3VibWl0ISEiKTsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIHJlc2V0Rm9ybShmb3JtTmFtZSkgewogICAgLy8gICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS5yZXNldEZpZWxkcygpOwogICAgLy8gfSwKICAgIC8vIGhhbmRsZVJlbW92ZShmaWxlLCBmaWxlTGlzdCkgewogICAgLy8gICBjb25zb2xlLmxvZyhmaWxlLCBmaWxlTGlzdCk7CiAgICAvLyB9LAogICAgLy8gaGFuZGxlUGljdHVyZUNhcmRQcmV2aWV3KGZpbGUpIHsKICAgIC8vICAgdGhpcy5kaWFsb2dJbWFnZVVybCA9IGZpbGUudXJsOwogICAgLy8gICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgLy8gfSwKICAgIC8vIGhhbmRsZUNoYW5nZShmaWxlLCBmaWxlTGlzdCkgewogICAgLy8gICB0aGlzLmZpbGVMaXN0ID0gZmlsZUxpc3Quc2xpY2UoLTMpOwogICAgLy8gfSwKICAgIC8vIGJlZm9yZVVwbG9hZChmaWxlKSB7CiAgICAvLyAgIGNvbnN0IGZpbGVTdWZmaXggPSBmaWxlLm5hbWUuc3Vic3RyaW5nKGZpbGUubmFtZS5sYXN0SW5kZXhPZigiLiIpICsgMSk7CiAgICAvLyAgIGNvbnN0IHdoaXRlTGlzdCA9IFsicGRmIl07CiAgICAvLyAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZihmaWxlU3VmZml4KSA9PT0gLTEpIHsKICAgIC8vICAgICB0aGlzLiRtc2coIuS4iuS8oOaWh+S7tuWPquiDveaYryBwZGYiKTsKICAgIC8vICAgICByZXR1cm4gZmFsc2U7CiAgICAvLyAgIH0KICAgIC8vIH0sCiAgICAvLyBpbWdQcmV2aWV3KGZpbGUpIHsKICAgIC8vICAgdGhpcy5maWxlQXJyID0gW107CiAgICAvLyAgIHRoaXMuZmlsZUFyci5wdXNoKGZpbGUpOwogICAgLy8gICB0aGlzLmZvcm0ucG9zaXRpb24gPSAiIjsKICAgIC8vICAgY29uc29sZS5sb2coZmlsZSk7CiAgICAvLyAgIHRoaXMuZm9ybS5wb3NpdGlvbiA9IGZpbGUubmFtZTsKICAgIC8vICAgbGV0IGZpbGVOYW1lID0gZmlsZS5uYW1lOwogICAgLy8gICBsZXQgcmVnZXggPSAvKC5qcGd8LmpwZWd8LmdpZnwucG5nfC5wZGYpJC87CiAgICAvLyAgIGlmIChyZWdleC50ZXN0KGZpbGVOYW1lLnRvTG93ZXJDYXNlKCkpKSB7CiAgICAvLyAgICAgdGhpcy51cExvYWRJbWdVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUucmF3KTsgLy8g6I635Y+WVVJMCiAgICAvLyAgICAgdGhpcy5wZGZVcmwgPSB0aGlzLmdldFBkZlVybChmaWxlKTsKICAgIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLnVwTG9hZEltZ1VybCk7CiAgICAvLyAgIH0gZWxzZSB7CiAgICAvLyAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi6K+36YCJ5oupcGRm5paH5Lu2Iik7CiAgICAvLyAgIH0KICAgIC8vIH0sCiAgICAvLyDkuIrkvKDmiJDlip8KICAgIHVwU3VjY2VzczogZnVuY3Rpb24gdXBTdWNjZXNzKHJlcykgewogICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICBtZXNzYWdlOiAi5LiK5Lyg5oiQ5YqfIiwKICAgICAgICB0eXBlOiAic3VjY2VzcyIKICAgICAgfSk7CiAgICB9LAogICAgLy8g5LiK5Lyg5aSx6LSlCiAgICB1cEVycm9yOiBmdW5jdGlvbiB1cEVycm9yKGUpIHsKICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgbWVzc2FnZTogIuS4iuS8oOWksei0pSIsCiAgICAgICAgdHlwZTogImVycm9yIgogICAgICB9KTsKICAgIH0sCiAgICAvL+WkhOeQhnBkZgogICAgZ2V0UGRmVXJsOiBmdW5jdGlvbiBnZXRQZGZVcmwoZmlsZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKGZpbGUpOwogICAgICB2YXIgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZS5yYXcpOyAvL+WwhuaWh+S7tui9rOWMluaIkHVybAogICAgICAvL+WKoOi9vXBkZgoKICAgICAgdmFyIGxvYWRpbmdUYXNrID0gcGRmLmNyZWF0ZUxvYWRpbmdUYXNrKHVybCk7CiAgICAgIGxvYWRpbmdUYXNrLnByb21pc2UudGhlbihmdW5jdGlvbiAocGRmKSB7CiAgICAgICAgX3RoaXMyLm51bVBhZ2VzID0gcGRmLm51bVBhZ2VzOwogICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5udW1QYWdlcyk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJwZGYg5Yqg6L295aSx6LSlIiwgZXJyKTsKICAgICAgfSk7CiAgICAgIHJldHVybiB1cmw7CiAgICB9LAogICAgLy/osIPnlKjor6Xlh73mlbDliJvlu7puZnQKICAgIGNvbmZpcm1NaW50OiBmdW5jdGlvbiBjb25maXJtTWludChtb2RlbERhdGEsIHVzZXIsIG5hbWUsIGRlc2MsIGRpc3BsYXlVcmwpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICAvLyDlj4LmlbA6IG1vZGVsRGF0YSwgcGFyYW1zLCB1c2VyLCBuYW1lLCBkZXNjLCBkaXNwbGF5VXJsCiAgICAgIC8vIOiOt+WPlueUu+W4g+S4iuiKgueCueeahOWPguaVsOWMheijhQogICAgICB2YXIgcGFyYW1zSlNPTlN0cmluZyA9IHRoaXMuZ2V0UGFyYW1zT3V0c2lkZUdyYXBoKCk7CiAgICAgIHZhciByZXN1bHRKU09OU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkodGhpcy5oaXN0b3J5U2ltdWxhdGVEYXRhKTsKICAgICAgdmFyIHJlcSA9IHsKICAgICAgICBhY2NvdW50QWRkcjogdXNlciwKICAgICAgICBtZXRhRGF0YTogewogICAgICAgICAgbmFtZTogdGhpcy5ydWxlRm9ybS5uYW1lLAogICAgICAgICAgZGVzYzogdGhpcy5ydWxlRm9ybS5kZXNjLAogICAgICAgICAgZGlzcGxheVVybDogZGlzcGxheVVybCwKICAgICAgICAgIG1ldGFkYXRhSGFzaDogIiIKICAgICAgICB9LAogICAgICAgIHNlY3JldERhdGE6IHsKICAgICAgICAgIG1vZGVsRGF0YTogbW9kZWxEYXRhLAogICAgICAgICAgcGFyYW1zOiBwYXJhbXNKU09OU3RyaW5nLAogICAgICAgICAgcmVzdWx0czogcmVzdWx0SlNPTlN0cmluZwogICAgICAgIH0KICAgICAgfTsKICAgICAgY29uc29sZS5sb2cocmVxKTsKCiAgICAgIHRyeSB7CiAgICAgICAgbWludG5mdChyZXEpLnRoZW4oZnVuY3Rpb24gKGJhY2tSZXMpIHsKICAgICAgICAgIGlmIChiYWNrUmVzLm1lc3NhZ2VfY29kZSA9PSBfdGhpczMuc3RhdHVzQ29kZS5TVUNDRVNTRUQpIHsKICAgICAgICAgICAgY3JlYXRlTkZUKF90aGlzMy51c2VyLCBuYW1lLCBkZXNjLCAiIiwgYmFja1Jlcy5kYXRhLm1ldGFkYXRhX2hhc2gpLnRoZW4oZnVuY3Rpb24gKGNoYWluUmVzKSB7CiAgICAgICAgICAgICAgaWYgKGNoYWluUmVzLnN0YXR1cyA9PSAic3VjY2Vzc2VkIikgewogICAgICAgICAgICAgICAgX3RoaXMzLiRub3RpZnkuc3VjY2Vzcyh7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAiU3VjY2VzcyIsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICJNaW50IE5GVCBzdWNjZXNzZnVsICEiLAogICAgICAgICAgICAgICAgICBwb3NpdGlvbjogImJvdHRvbS1yaWdodCIKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBfdGhpczMuJG5vdGlmeS5lcnJvcih7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAiRXJyb3IiLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAiTWludCBORlQgZXJyb3IgISIsCiAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAiYm90dG9tLXJpZ2h0IgogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzMy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgICB0aXRsZTogIkVycm9yIiwKICAgICAgICAgICAgICBtZXNzYWdlOiAiTWludCBORlQgZXJyb3IgISIsCiAgICAgICAgICAgICAgcG9zaXRpb246ICJib3R0b20tcmlnaHQiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgdGhpcy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgIHRpdGxlOiAiRXJyb3IiLAogICAgICAgICAgbWVzc2FnZTogIk1pbnQgTkZUIGVycm9yICEiLAogICAgICAgICAgcG9zaXRpb246ICJib3R0b20tcmlnaHQiCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBjaGFuZ2VJbWc6IGZ1bmN0aW9uIGNoYW5nZUltZyhlKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuaW1nQXJyKTsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBpbWdMaW1pdCA9IDEwOwogICAgICB2YXIgZmlsZXMgPSBlLnRhcmdldC5maWxlczsKICAgICAgdmFyIGltYWdlID0gbmV3IEltYWdlKCk7CgogICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCkgewogICAgICAgIHZhciBkZCA9IDA7CiAgICAgICAgdmFyIHRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKGZpbGVzLml0ZW0oZGQpLnR5cGUgIT0gImltYWdlL3BuZyIgJiYgZmlsZXMuaXRlbShkZCkudHlwZSAhPSAiaW1hZ2UvanBlZyIgJiYgZmlsZXMuaXRlbShkZCkudHlwZSAhPSAiaW1hZ2UvZ2lmIikgewogICAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5lcnJvcigi5LuF5pSv5oyB5Zu+54mH57G75Z6L77yBIik7CgogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGZpbGVzLml0ZW0oZGQpLnNpemUgPiBpbWdMaW1pdCAqIDEwMjQwMCkgewogICAgICAgICAgICAvL3RvIGRvIHN0aAogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLlm77niYfopoHmsYLlsI/kuo4xTUIiKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGltYWdlLnNyYyA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGVzLml0ZW0oZGQpKTsKCiAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAvLyDpu5jorqTmjInmr5TkvovljovnvKkKICAgICAgICAgICAgICB2YXIgdyA9IGltYWdlLndpZHRoLAogICAgICAgICAgICAgICAgICBoID0gaW1hZ2UuaGVpZ2h0OwogICAgICAgICAgICAgIHZhciBxdWFsaXR5ID0gMTsKICAgICAgICAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7CiAgICAgICAgICAgICAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwogICAgICAgICAgICAgIHZhciBhbncgPSBkb2N1bWVudC5jcmVhdGVBdHRyaWJ1dGUoIndpZHRoIik7CiAgICAgICAgICAgICAgYW53Lm5vZGVWYWx1ZSA9IHc7CiAgICAgICAgICAgICAgdmFyIGFuaCA9IGRvY3VtZW50LmNyZWF0ZUF0dHJpYnV0ZSgiaGVpZ2h0Iik7CiAgICAgICAgICAgICAgYW5oLm5vZGVWYWx1ZSA9IGg7CiAgICAgICAgICAgICAgY2FudmFzLnNldEF0dHJpYnV0ZU5vZGUoYW53KTsKICAgICAgICAgICAgICBjYW52YXMuc2V0QXR0cmlidXRlTm9kZShhbmgpOwogICAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2UoaW1hZ2UsIDAsIDAsIHcsIGgpOwogICAgICAgICAgICAgIHZhciBleHQgPSBpbWFnZS5zcmMuc3Vic3RyaW5nKGltYWdlLnNyYy5sYXN0SW5kZXhPZigiLiIpICsgMSkudG9Mb3dlckNhc2UoKTsgLy/lm77niYfmoLzlvI8KCiAgICAgICAgICAgICAgdmFyIGJhc2U2NCA9IGNhbnZhcy50b0RhdGFVUkwoImltYWdlLyIgKyBleHQsIHF1YWxpdHkpOyAvLyDlm57osIPlh73mlbDov5Tlm55iYXNlNjTnmoTlgLwKCiAgICAgICAgICAgICAgaWYgKF90aGlzLmltZ0Fyci5sZW5ndGggPD0gMSkgewogICAgICAgICAgICAgICAgX3RoaXMuaW1nQXJyLnVuc2hpZnQoIiIpOwoKICAgICAgICAgICAgICAgIF90aGlzLmltZ0Fyci5zcGxpY2UoMCwgMSwgYmFzZTY0KTsgLy/mm7/mjaLmlbDnu4TmlbDmja7nmoTmlrnms5XvvIzmraTlpITkuI3og73kvb/nlKjvvJp0aGlzLmltZ0FycltpbmRleF0gPSB1cmw7CgoKICAgICAgICAgICAgICAgIF90aGlzLiRub3RpZnkuc3VjY2Vzcyh7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAiU3VjY2VzcyIsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICJJbWFnZSB1cGxvYWQgc3VjY2Vzc2Z1bCEgWW91IGNhbiByaWdodC1jbGljayB0byBkZWxldGUgaXQgIiwKICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICJib3R0b20tcmlnaHQiCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kcmVmcy51cGxvYWQudmFsdWUgPSBudWxsOwoKICAgICAgICAgICAgICAgIGlmIChfdGhpcy5pbWdBcnIubGVuZ3RoID49IDEpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuYWxsb3dBZGRJbWcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGRkIDwgZmlsZXMubGVuZ3RoIC0gMSkgewogICAgICAgICAgICBkZCsrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7CiAgICAgICAgICB9CiAgICAgICAgfSwgMTAwMCk7CiAgICAgIH0KICAgIH0sCiAgICBkZWxldGVJbWc6IGZ1bmN0aW9uIGRlbGV0ZUltZyhpbmRleCkgewogICAgICB0aGlzLmltZ0Fyci5zcGxpY2UoaW5kZXgsIDEpOwoKICAgICAgaWYgKHRoaXMuaW1nQXJyLmxlbmd0aCA8IDUpIHsKICAgICAgICB0aGlzLmFsbG93QWRkSW1nID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIG1pbnQ6IGZ1bmN0aW9uIG1pbnQoKSB7CiAgICAgIHZhciBtb2RlbERhdGEgPSBnZXRTdG9yZSgiZ3JhcGgiKTsKCiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5jb25maXJtTWludChtb2RlbERhdGEsIHRoaXMudXNlciwgdGhpcy5ydWxlRm9ybS5uYW1lLCB0aGlzLnJ1bGVGb3JtLmRlc2MsIHRoaXMuaW1nQXJyWzBdKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0aGlzLnJ1bGVGb3JtLm5hbWUgPSAiIjsKICAgICAgICB0aGlzLnJ1bGVGb3JtLmRlc2MgPSAiIjsKICAgICAgICB0aGlzLmltZ0FyciA9IFtdOwogICAgICAgIHRoaXMuYWxsb3dBZGRJbWcgPSB0cnVlOwogICAgICAgIHRoaXMuY2xvc2UoKTsKICAgICAgfQogICAgfSwKICAgIC8vIOiOt+WPlueUu+W4g+S5i+WklueahOeOr+Wig+WPguaVsO+8jOi/lOWbnuWAvOaYryBKU09OIOWtl+espuS4sgogICAgZ2V0UGFyYW1zT3V0c2lkZUdyYXBoOiBmdW5jdGlvbiBnZXRQYXJhbXNPdXRzaWRlR3JhcGgoKSB7CiAgICAgIHZhciByZXMgPSB7CiAgICAgICAgY29uZmlnRGF0YTogdGhpcy5jb25maWdEYXRhCiAgICAgIH07CiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShyZXMpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["MintForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-form\n      :label-position=\"labelPosition\"\n      :model=\"ruleForm\"\n      :rules=\"rules\"\n      ref=\"ruleForm\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <!-- <el-form-item label=\"Model Image\" prop=\"image\">\n        <el-upload\n          action=\"https://jsonplaceholder.typicode.com/posts/\"\n          list-type=\"picture-card\"\n          :on-preview=\"handlePictureCardPreview\"\n          :on-remove=\"handleRemove\"\n        >\n          <i class=\"el-icon-plus\"></i>\n        </el-upload>\n        <el-dialog :visible.sync=\"dialogVisible\">\n          <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\" />\n        </el-dialog>\n      </el-form-item> -->\n\n      <el-form-item label=\"Model Image\">\n        <div class=\"com-upload-img\">\n          <div class=\"img_group\">\n            <div class=\"img_box\" v-if=\"allowAddImg\">\n              <div>\n                <i class=\"el-icon-picture image-upload-button\"></i>\n                <input\n                  ref=\"upload\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  multiple=\"multiple\"\n                  class=\"model-image-input\"\n                  @change=\"changeImg($event)\"\n                />\n              </div>\n            </div>\n\n            <viewer :images=\"imgArr\">\n              <img\n                v-for=\"(src, index) in imgArr\"\n                :src=\"src\"\n                :key=\"index\"\n                width=\"450\"\n                class=\"img-show\"\n                @contextmenu.prevent=\"deleteImg(index)\"\n              />\n            </viewer>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"Model Name\" prop=\"name\">\n        <el-input v-model=\"ruleForm.name\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"Description\" prop=\"desc\">\n        <el-input v-model=\"ruleForm.desc\"></el-input>\n      </el-form-item>\n\n      <!-- <el-form-item label=\"Report File\" prop=\"reportFile\">\n        <el-upload\n          accept=\".pdf\"\n          action=\"https://jsonplaceholder.typicode.com/posts/\"\n          :file-list=\"fileArr\"\n          :show-file-list=\"true\"\n          :auto-upload=\"false\"\n          :before-upload=\"beforeUpload\"\n          :on-success=\"upSuccess\"\n          :on-error=\"upError\"\n          :on-change=\"imgPreview\"\n        >\n          <el-button size=\"small\" type=\"primary\" class=\"upload-btn\">\n            <span class=\"iconfont icon-shangchuan\" />Click to Upload\n          </el-button>\n        </el-upload>\n      </el-form-item> -->\n\n      <!-- <el-form-item label=\"Include Model\" prop=\"include\">\n        <el-switch v-model=\"ruleForm.delivery\"></el-switch>\n      </el-form-item> -->\n\n      <!-- <el-form-item label=\"External Link\" prop=\"exlink\">\n        <el-input v-model=\"ruleForm.exlink\"></el-input>\n      </el-form-item> -->\n\n      <el-form-item>\n        <!-- <el-button @click=\"resetForm('ruleForm')\">Reset</el-button> -->\n        <el-button type=\"primary\" @click=\"mint()\">Mint</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n\n<script>\nimport pdf from \"vue-pdf\";\nimport { mintnft } from \"../../api/index\";\nimport { createNFT } from \"../../api/web3/contracts\";\nimport { mapState } from \"vuex\";\nimport { getStore } from \"../../utils/storage\";\nexport default {\n  props: [\"close\"],\n  data() {\n    return {\n      imgArr: [],\n      allowAddImg: true,\n      labelPosition: \"top\",\n      dialogImageUrl: \"\",\n      //fileList: [],\n      pdfUrl: \"\",\n      numPages: [],\n      // fileArr: [],\n      upLoadImgUrl: \"\",\n      dialogVisible: false,\n      ruleForm: {\n        name: \"\",\n        desc: \"\",\n        // include: false,\n        // exlink: \"\",\n      },\n      rules: {\n        name: [\n          {\n            required: true,\n            message: \"Please Enter Model Name\",\n            trigger: \"blur\",\n          },\n          {\n            min: 3,\n            max: 15,\n            message: \"3 to 15 characters long\",\n            trigger: \"blur\",\n          },\n        ],\n        desc: [\n          {\n            required: true,\n            message: \"Please Enter Model Description\",\n            trigger: \"blur\",\n          },\n          {\n            min: 3,\n            max: 150,\n            message: \"3 to 150 characters long\",\n            trigger: \"blur\",\n          },\n        ],\n\n        exlink: [\n          {\n            required: true,\n            message: \"Please Enter External Link\",\n            trigger: \"blur\",\n          },\n          {\n            min: 10,\n            max: 200,\n            message: \"10 to 200 characters long\",\n            trigger: \"blur\",\n          },\n        ],\n        // exlink: [\n        //   { required: true, message: \"Please Enter External Link\", trigger: \"blur\" },\n        //   {\n        //     min: 10,\n        //     max: 200,\n        //     message: \"10 to 200 characters long\",\n        //     trigger: \"blur\",\n        //   },\n        // ],\n      },\n      mintResult: false,\n    };\n  },\n  components: {\n    pdf,\n  },\n  computed: {\n    ...mapState([\"user\", \"statusCode\", \"configData\", \"historySimulateData\"]),\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert(\"submit!\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    // resetForm(formName) {\n    //   this.$refs[formName].resetFields();\n    // },\n\n    // handleRemove(file, fileList) {\n    //   console.log(file, fileList);\n    // },\n    // handlePictureCardPreview(file) {\n    //   this.dialogImageUrl = file.url;\n    //   this.dialogVisible = true;\n    // },\n    // handleChange(file, fileList) {\n    //   this.fileList = fileList.slice(-3);\n    // },\n    // beforeUpload(file) {\n    //   const fileSuffix = file.name.substring(file.name.lastIndexOf(\".\") + 1);\n    //   const whiteList = [\"pdf\"];\n    //   if (whiteList.indexOf(fileSuffix) === -1) {\n    //     this.$msg(\"上传文件只能是 pdf\");\n    //     return false;\n    //   }\n    // },\n    // imgPreview(file) {\n    //   this.fileArr = [];\n    //   this.fileArr.push(file);\n    //   this.form.position = \"\";\n    //   console.log(file);\n    //   this.form.position = file.name;\n    //   let fileName = file.name;\n    //   let regex = /(.jpg|.jpeg|.gif|.png|.pdf)$/;\n    //   if (regex.test(fileName.toLowerCase())) {\n    //     this.upLoadImgUrl = URL.createObjectURL(file.raw); // 获取URL\n    //     this.pdfUrl = this.getPdfUrl(file);\n    //     console.log(this.upLoadImgUrl);\n    //   } else {\n    //     this.$message.error(\"请选择pdf文件\");\n    //   }\n    // },\n\n    // 上传成功\n    upSuccess(res) {\n      this.$message({\n        message: \"上传成功\",\n        type: \"success\",\n      });\n    },\n    // 上传失败\n    upError(e) {\n      this.$message({\n        message: \"上传失败\",\n        type: \"error\",\n      });\n    },\n    //处理pdf\n    getPdfUrl(file) {\n      console.log(file);\n      let url = window.URL.createObjectURL(file.raw); //将文件转化成url\n      //加载pdf\n      let loadingTask = pdf.createLoadingTask(url);\n      loadingTask.promise\n        .then((pdf) => {\n          this.numPages = pdf.numPages;\n          console.log(this.numPages);\n        })\n        .catch((err) => {\n          console.error(\"pdf 加载失败\", err);\n        });\n      return url;\n    },\n    //调用该函数创建nft\n    confirmMint(modelData, user, name, desc, displayUrl) {\n      // 参数: modelData, params, user, name, desc, displayUrl\n      // 获取画布上节点的参数包装\n      let paramsJSONString = this.getParamsOutsideGraph();\n      let resultJSONString = JSON.stringify(this.historySimulateData);\n\n      const req = {\n        accountAddr: user,\n        metaData: {\n          name: this.ruleForm.name,\n          desc: this.ruleForm.desc,\n          displayUrl: displayUrl,\n          metadataHash: \"\",\n        },\n        secretData: {\n          modelData: modelData,\n          params: paramsJSONString,\n          results: resultJSONString,\n        },\n      };\n      console.log(req);\n      try {\n        mintnft(req).then((backRes) => {\n          if (backRes.message_code == this.statusCode.SUCCESSED) {\n            createNFT(\n              this.user,\n              name,\n              desc,\n              \"\",\n              backRes.data.metadata_hash\n            ).then((chainRes) => {\n              if (chainRes.status == \"successed\") {\n                this.$notify.success({\n                  title: \"Success\",\n                  message: \"Mint NFT successful !\",\n                  position: \"bottom-right\",\n                });\n              } else {\n                this.$notify.error({\n                  title: \"Error\",\n                  message: \"Mint NFT error !\",\n                  position: \"bottom-right\",\n                });\n              }\n            });\n          } else {\n            this.$notify.error({\n              title: \"Error\",\n              message: \"Mint NFT error !\",\n              position: \"bottom-right\",\n            });\n          }\n        });\n      } catch (e) {\n        this.$notify.error({\n          title: \"Error\",\n          message: \"Mint NFT error !\",\n          position: \"bottom-right\",\n        });\n      }\n    },\n    changeImg(e) {\n      // console.log(this.imgArr);\n      var _this = this;\n      var imgLimit = 10;\n      var files = e.target.files;\n      var image = new Image();\n      if (files.length > 0) {\n        var dd = 0;\n        var timer = setInterval(function () {\n          if (\n            files.item(dd).type != \"image/png\" &&\n            files.item(dd).type != \"image/jpeg\" &&\n            files.item(dd).type != \"image/gif\"\n          ) {\n            _this.$message.error(\"仅支持图片类型！\");\n            return false;\n          }\n          if (files.item(dd).size > imgLimit * 102400) {\n            //to do sth\n            this.$message.error(\"图片要求小于1MB\");\n          } else {\n            image.src = window.URL.createObjectURL(files.item(dd));\n            image.onload = function () {\n              // 默认按比例压缩\n              var w = image.width,\n                h = image.height;\n              var quality = 1;\n              var canvas = document.createElement(\"canvas\");\n              var ctx = canvas.getContext(\"2d\");\n              var anw = document.createAttribute(\"width\");\n              anw.nodeValue = w;\n              var anh = document.createAttribute(\"height\");\n              anh.nodeValue = h;\n              canvas.setAttributeNode(anw);\n              canvas.setAttributeNode(anh);\n              ctx.drawImage(image, 0, 0, w, h);\n              var ext = image.src\n                .substring(image.src.lastIndexOf(\".\") + 1)\n                .toLowerCase(); //图片格式\n              var base64 = canvas.toDataURL(\"image/\" + ext, quality);\n              // 回调函数返回base64的值\n              if (_this.imgArr.length <= 1) {\n                _this.imgArr.unshift(\"\");\n                _this.imgArr.splice(0, 1, base64); //替换数组数据的方法，此处不能使用：this.imgArr[index] = url;\n                _this.$notify.success({\n                  title: \"Success\",\n                  message:\n                    \"Image upload successful! You can right-click to delete it \",\n                  position: \"bottom-right\",\n                });\n                _this.$refs.upload.value = null;\n                if (_this.imgArr.length >= 1) {\n                  _this.allowAddImg = false;\n                }\n              }\n            };\n          }\n          if (dd < files.length - 1) {\n            dd++;\n          } else {\n            clearInterval(timer);\n          }\n        }, 1000);\n      }\n    },\n    deleteImg(index) {\n      this.imgArr.splice(index, 1);\n      if (this.imgArr.length < 5) {\n        this.allowAddImg = true;\n      }\n    },\n    mint() {\n      const modelData = getStore(\"graph\");\n      try {\n        this.confirmMint(\n          modelData,\n          this.user,\n          this.ruleForm.name,\n          this.ruleForm.desc,\n          this.imgArr[0]\n        );\n      } finally {\n        this.ruleForm.name = \"\";\n        this.ruleForm.desc = \"\";\n        this.imgArr = [];\n        this.allowAddImg = true;\n        this.close();\n      }\n    },\n    // 获取画布之外的环境参数，返回值是 JSON 字符串\n    getParamsOutsideGraph() {\n      let res = {\n        configData: this.configData\n      };\n\n      return JSON.stringify(res);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped >\n.img_box {\n  position: relative;\n  .image-upload-button {\n    font-size: 60px;\n    margin-left: 30px;\n  }\n  .model-image-input {\n    position: absolute;\n    font-size: 40px;\n    left: 30px;\n    top: 0;\n    opacity: 0;\n    width: 60px;\n  }\n}\n.img-show {\n  margin-left: 15px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.12), 0 0 6px rgba(0, 0, 0, 0.04);\n}\n</style>"],"sourceRoot":"src/components/Template"}]}