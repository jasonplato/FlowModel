{"remainingRequest":"/Users/xufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js!/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xufei/Desktop/FlowModel/src/components/create/Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xufei/Desktop/FlowModel/src/components/create/Editor.vue","mtime":1653708835745},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js","mtime":1653708688758},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js","mtime":1653708694636}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,QAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,oBAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,OAAA,QAAA,MAAA,oBAAA;AACA,SAAA,KAAA,EAAA,KAAA,EAAA,KAAA,QAAA,UAAA;IACA,O,GAAA,K,CAAA,O;IACA,I,GAAA,K,CAAA,I;IAAA,M,GAAA,K,CAAA,M,EACA;;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,SAAA,UAAA,QAAA,iBAAA;AACA,SAAA,QAAA,QAAA,qBAAA;AACA,SAAA,eAAA,QAAA,0BAAA;AACA,SAAA,gBAAA,QAAA,sBAAA;AACA,SAAA,aAAA,QAAA,iBAAA;AACA,SAAA,cAAA,EAAA,iBAAA,QAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,YAAA,EAAA,IAFA;AAGA,MAAA,kBAAA,EAAA,KAHA;AAIA;AACA,MAAA,mBAAA,EAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,WAAA,EAAA,WAFA;AAGA,IAAA,QAAA,EAAA,QAHA;AAIA,IAAA,WAAA,EAAA,WAJA;AAKA,IAAA,QAAA,EAAA,QALA;AAMA,IAAA,QAAA,EAAA;AANA,GAVA;AAkBA,EAAA,OAAA,oBACA,YAAA,CAAA,CACA,eADA,EAEA,YAFA,EAGA,mBAHA,EAIA,YAJA,EAKA,qBALA,EAMA,gBANA,EAOA,8BAPA,EAQA,mBARA,EASA,UATA,EAUA,iBAVA,CAAA,CADA;AAcA;AACA,IAAA,SAfA,uBAeA;AAAA;;AACA,UAAA,SAAA,GAAA,IAAA,KAAA;AACA,QAAA,SAAA,EAAA,QAAA,CAAA,cAAA,CAAA,aAAA,CADA;AAEA,QAAA,SAAA,EAAA,IAFA;AAGA,QAAA,UAAA,EAAA,IAHA;AAIA,QAAA,OAAA,EAAA,IAJA;AAKA,QAAA,UAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA,SALA;AAQA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,EADA;AAEA,UAAA,OAAA,EAAA;AAFA,SARA;AAYA,QAAA,QAAA,EAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA;AAFA,SAZA;AAgBA,QAAA,QAAA,EAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,WAAA,EAAA,KAFA;AAGA,UAAA,SAAA,EAAA,KAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,SAAA,EAAA,CAAA,OAAA;AALA,SAhBA;AAuBA,QAAA,UAAA,EAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,mBAAA,EAAA,IAFA;AAGA,UAAA,SAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CAHA;AAIA,UAAA,QAAA,EAAA,GAJA;AAKA,UAAA,QAAA,EAAA;AALA,SAvBA;AA8BA,QAAA,UAAA,EAAA;AACA,UAAA,MAAA,EAAA;AACA,YAAA,IAAA,EAAA,WADA;AAEA,YAAA,IAAA,EAAA;AACA,cAAA,OAAA,EAAA;AADA;AAFA,WADA;AAOA,UAAA,SAAA,EAAA;AACA,YAAA,IAAA,EAAA,SADA;AAEA,YAAA,IAAA,EAAA;AACA,cAAA,MAAA,EAAA;AADA;AAFA,WAPA;AAaA,UAAA,MAAA,EAAA,QAbA;AAcA,UAAA,eAAA,EAAA,QAdA;AAeA,UAAA,UAAA,EAAA,KAfA;AAgBA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,EAAA;AADA,WAhBA;AAmBA,UAAA,UAnBA,wBAmBA;AACA,mBAAA,IAAA,KAAA,CAAA,IAAA,CAAA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAA,MAAA,EAAA,SATA;AAUA,kBAAA,WAAA,EAAA,CAVA;AAWA,kBAAA,YAAA,EAAA;AACA,oBAAA,IAAA,EAAA,OADA;AAEA,oBAAA,KAAA,EAAA,CAFA;AAGA,oBAAA,MAAA,EAAA,CAHA;AAIA;AACA,oBAAA,MAAA,EAAA,SALA,CAKA;;AALA;AAXA;AADA,eADA;AAuBA,cAAA,IAAA,EAAA;AACA,gBAAA,IAAA,EAAA,MADA;AAEA,gBAAA,MAAA,EAAA,GAFA;AAGA,gBAAA,OAAA,EAAA;AAHA,eAvBA;AA4BA,cAAA,MAAA,EAAA;AA5BA,aAAA,CAAA;AA8BA,WAlDA;AAmDA,UAAA,kBAnDA,oCAmDA;AAAA,gBAAA,YAAA,QAAA,YAAA;AACA,mBAAA,CAAA,CAAA,YAAA;AACA;AArDA,SA9BA;AAqFA,QAAA,YAAA,EAAA;AACA,UAAA,cAAA,EAAA;AACA,YAAA,IAAA,EAAA,QADA;AAEA,YAAA,IAAA,EAAA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,IAAA,EAAA,SADA;AAEA,gBAAA,MAAA,EAAA;AAFA;AADA;AAFA;AADA,SArFA;AAgGA,QAAA,QAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA;AAhGA,8CAmGA;AACA,QAAA,OAAA,EAAA,IADA;AAEA,QAAA,UAAA,EAAA,IAFA;AAGA,QAAA,oBAAA,EAAA;AAHA,OAnGA,uCAyGA,IAzGA,wCA0GA,IA1GA,WAAA;AA4GA,WAAA,UAAA,CAAA,SAAA;AACA,KA7HA;AA+HA;AACA,IAAA,WAhIA,yBAgIA;AACA,WAAA,OAAA,GAAA,IAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,YADA;AAEA,QAAA,MAAA,EAAA,KAAA,KAFA;AAIA;AACA,QAAA,iBAAA,EAAA,GALA;AAMA,QAAA,kBAAA,EAAA,GANA;AAOA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAPA,OAAA,CAAA;AAcA,MAAA,QAAA,CAAA,cAAA,CAAA,MAAA,EAAA,WAAA,CAAA,KAAA,OAAA,CAAA,SAAA;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA;AACA;AACA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,gBAAA,EAAA,EADA;AAEA,cAAA,WAAA,EAAA,CACA;AAAA,gBAAA,IAAA,EAAA,MAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eADA,EAEA;AAAA,gBAAA,IAAA,EAAA,UAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAFA,EAGA;AAAA,gBAAA,IAAA,EAAA,SAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAHA,EAIA;AAAA,gBAAA,IAAA,EAAA,YAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAJA,EAKA;AAAA,gBAAA,IAAA,EAAA,WAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eALA;AAFA;AADA,WAFA;AAcA,UAAA,IAAA,EAAA;AAdA,SAHA;AAmBA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,EAAA,mBADA;AAEA,YAAA,MAAA,EAAA,SAFA;AAGA,YAAA,WAAA,EAAA;AAHA,WADA;AAMA,UAAA,IAAA,EAAA;AACA,YAAA,EAAA,EAAA,EADA;AAEA,YAAA,EAAA,EAAA;AAFA,WANA;AAUA,UAAA,IAAA,EAAA;AAAA,YAAA,IAAA,EAAA,OAAA;AAAA,YAAA,IAAA,EAAA;AAAA;AAVA,SAnBA;AA+BA,QAAA,KAAA,EAAA;AA/BA,OAAA,CAAA;AAkCA,UAAA,OAAA,GAAA,IAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA;AACA;AACA,UAAA,QAAA,EAAA;AACA,YAAA,WAAA,EAAA;AACA,cAAA,YAAA,EAAA,CADA;AAEA,cAAA,aAAA,EAAA,CACA;AAAA,gBAAA,IAAA,EAAA,MAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eADA,EAEA;AAAA,gBAAA,IAAA,EAAA,UAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAFA,EAGA;AAAA,gBAAA,IAAA,EAAA,SAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAHA,EAIA;AAAA,gBAAA,IAAA,EAAA,YAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAJA,EAKA;AAAA,gBAAA,IAAA,EAAA,WAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eALA;AAFA;AADA,WAFA;AAcA,UAAA,IAAA,EAAA;AAdA,SAHA;AAmBA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AAAA,YAAA,IAAA,EAAA,kBAAA;AAAA,YAAA,MAAA,EAAA,SAAA;AAAA,YAAA,WAAA,EAAA;AAAA,WADA;AAEA,UAAA,IAAA,EAAA;AAAA,YAAA,IAAA,EAAA,SAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAFA;AAGA,UAAA,IAAA,EAAA;AACA,YAAA,EAAA,EAAA,EADA;AAEA,YAAA,EAAA,EAAA;AAFA;AAHA,SAnBA;AA2BA,QAAA,KAAA,EAAA;AA3BA,OAAA,CAAA;AA8BA,UAAA,KAAA,GAAA,IAAA,MAAA,CAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA;AACA;AACA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,WAAA,EAAA,CADA;AAEA,cAAA,WAAA,EAAA,CACA;AAAA,gBAAA,IAAA,EAAA,MAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eADA,EAEA;AAAA,gBAAA,IAAA,EAAA,UAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAFA,EAGA;AAAA,gBAAA,IAAA,EAAA,SAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAHA,EAIA;AAAA,gBAAA,IAAA,EAAA,YAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eAJA,EAKA;AAAA,gBAAA,IAAA,EAAA,WAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,KAAA,EAAA;AAAA,eALA,CAFA;AASA,cAAA,SAAA,EAAA;AACA,gBAAA,WAAA,EAAA,CACA;AAAA,kBAAA,IAAA,EAAA,SAAA;AAAA,kBAAA,IAAA,EAAA,CAAA;AAAA,kBAAA,KAAA,EAAA;AAAA,iBADA,EAEA;AAAA,kBAAA,IAAA,EAAA,SAAA;AAAA,kBAAA,IAAA,EAAA,CAAA;AAAA,kBAAA,KAAA,EAAA;AAAA,iBAFA,CADA;AAKA,gBAAA,eAAA,EAAA,CALA;AAMA,gBAAA,oBAAA,EAAA,CANA;AAOA,gBAAA,2BAAA,EAAA;AAPA;AATA;AADA,WAFA;AAuBA,UAAA,IAAA,EAAA;AAvBA,SAHA;AA4BA,QAAA,KAAA,EAAA;AACA,UAAA,MAAA,EAAA;AACA,YAAA,IAAA,EAAA,kBADA;AAEA,YAAA,WAAA,EAAA,CAFA;AAGA,YAAA,MAAA,EAAA;AAHA,WADA;AAMA,UAAA,IAAA,EAAA;AAAA,YAAA,IAAA,EAAA,OAAA;AAAA,YAAA,IAAA,EAAA;AAAA;AANA,SA5BA;AAoCA,QAAA,KAAA,EAAA;AApCA,OAAA,CAAA;AAuCA,UAAA,IAAA,GAAA,IAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA;AACA;AACA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,cAAA,UAAA,EAAA,CACA;AACA,gBAAA,IAAA,EAAA,MADA;AAEA,gBAAA,IAAA,EAAA,CAFA;AAGA,gBAAA,KAAA,EAAA,aAHA;AAIA,gBAAA,UAAA,EAAA,CAJA;AAKA,gBAAA,aAAA,EAAA,CALA;AAMA,gBAAA,KAAA,EAAA;AANA,eADA,EASA;AACA,gBAAA,IAAA,EAAA,UADA;AAEA,gBAAA,IAAA,EAAA,CAFA;AAGA,gBAAA,KAAA,EAAA,iBAHA;AAIA,gBAAA,UAAA,EAAA,CAJA;AAKA,gBAAA,aAAA,EAAA,CALA;AAMA,gBAAA,KAAA,EAAA;AANA,eATA,EAiBA;AACA,gBAAA,IAAA,EAAA,SADA;AAEA,gBAAA,IAAA,EAAA,CAFA;AAGA,gBAAA,KAAA,EAAA,gBAHA;AAIA,gBAAA,UAAA,EAAA,CAJA;AAKA,gBAAA,aAAA,EAAA,CALA;AAMA,gBAAA,KAAA,EAAA;AANA,eAjBA,EAyBA;AACA,gBAAA,IAAA,EAAA,YADA;AAEA,gBAAA,IAAA,EAAA,CAFA;AAGA,gBAAA,KAAA,EAAA,mBAHA;AAIA,gBAAA,UAAA,EAAA,CAJA;AAKA,gBAAA,aAAA,EAAA,CALA;AAMA,gBAAA,KAAA,EAAA;AANA,eAzBA,EAiCA;AACA,gBAAA,IAAA,EAAA,WADA;AAEA,gBAAA,IAAA,EAAA,CAFA;AAGA,gBAAA,KAAA,EAAA,kBAHA;AAIA,gBAAA,UAAA,EAAA,CAJA;AAKA,gBAAA,aAAA,EAAA,CALA;AAMA,gBAAA,KAAA,EAAA;AANA,eAjCA;AADA;AADA,WAFA;AAgDA,UAAA,IAAA,EAAA;AAhDA,SAHA;AAqDA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AACA,YAAA,EAAA,EAAA,EADA;AAEA,YAAA,EAAA,EAAA;AAFA,WADA;AAKA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,EAAA,kBADA;AAEA,YAAA,MAAA,EAAA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAA,WAAA,EAAA;AAXA,WALA;AAkBA,UAAA,IAAA,EAAA;AAAA,YAAA,IAAA,EAAA,MAAA;AAAA,YAAA,IAAA,EAAA;AAAA;AAlBA,SArDA;AAyEA,QAAA,KAAA,EAAA;AAzEA,OAAA,CAAA;AA4EA,WAAA,OAAA,CAAA,IAAA,CACA,CAAA,KAAA,CAAA,KAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,EAAA,KAAA,CAAA,KAAA,EAAA,EAAA,OAAA,CAAA,KAAA,EAAA,CADA,EAEA,YAFA;AAIA,KAvUA;AAwUA;AACA,IAAA,eAzUA,6BAyUA;AAAA;;AACA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,YAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,gBAAA,EAAA;;AACA,YAAA,KAAA,CAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AACA;;AACA,eAAA,KAAA;AACA,OANA;AAOA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,YAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,gBAAA,EAAA;;AACA,YAAA,KAAA,CAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA;AACA;;AACA,eAAA,KAAA;AACA,OANA;AAOA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,YAAA;AACA,YAAA,CAAA,KAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,EAAA;AACA,cAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AAAA,YAAA,MAAA,EAAA;AAAA,WAAA,CAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,cAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;;AACA,eAAA,KAAA;AACA,OAPA,EAhBA,CAwBA;;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,YAAA;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,EAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA;;AACA,eAAA,KAAA;AACA,OALA;AAMA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,cAAA,EAAA,cAAA,CAAA,EAAA,YAAA;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,EAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA;;AACA,eAAA,KAAA;AACA,OALA,EA/BA,CAsCA;;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,YAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA;;AACA,YAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;AACA,OALA,EAvCA,CA8CA;;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,YAAA;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,KAAA,CAAA,IAAA,EAAA;;AACA,YAAA,IAAA,GAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,OALA;AAMA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,YAAA;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,KAAA,CAAA,IAAA,EAAA;;AACA,YAAA,IAAA,GAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,GAAA;AACA;AACA,OALA;AAMA,KApYA;AAqYA,IAAA,cArYA,4BAqYA;AAAA;;AACA;AACA,WAAA,KAAA,CAAA,EAAA,CAAA,kBAAA,EAAA,iBAAA;AAAA,YAAA,CAAA,SAAA,CAAA;AAAA,YAAA,CAAA,SAAA,CAAA;AAAA,YAAA,CAAA,SAAA,CAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,MAAA,CAAA,YAAA,GAAA,KAAA;;AACA,QAAA,MAAA,CAAA,cAAA,CAAA,IAAA;AACA,OAfA,EAFA,CAkBA;;AACA,WAAA,KAAA,CAAA,EAAA,CAAA,YAAA,EAAA,iBAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AAAA,YAAA,OAAA,SAAA,OAAA;;AACA,QAAA,MAAA,CAAA,aAAA;AACA,OAFA;AAIA,WAAA,KAAA,CAAA,EAAA,CAAA,YAAA,EAAA,iBAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AAAA,YAAA,OAAA,SAAA,OAAA;;AACA,QAAA,MAAA,CAAA,aAAA;AACA,OAFA;AAGA,WAAA,KAAA,CAAA,EAAA,CAAA,cAAA,EAAA,iBAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AAAA,YAAA,OAAA,SAAA,OAAA;;AACA,QAAA,MAAA,CAAA,aAAA;AACA,OAFA;AAGA,WAAA,KAAA,CAAA,EAAA,CAAA,cAAA,EAAA,iBAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AAAA,YAAA,OAAA,SAAA,OAAA;;AACA,QAAA,MAAA,CAAA,aAAA;AACA,OAFA,EA7BA,CAgCA;;AACA,UAAA,SAAA,GAAA,SAAA,SAAA,CAAA,KAAA,EAAA,IAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,KAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,UAAA,GAAA,IAAA,GAAA,SAAA,GAAA,QAAA;AACA;AACA,OAJA;;AAKA,WAAA,KAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,YAAA;AACA,YAAA,SAAA,GAAA,QAAA,CAAA,cAAA,CAAA,aAAA,CAAA;AACA,YAAA,KAAA,GAAA,SAAA,CAAA,gBAAA,CAAA,eAAA,CAAA;AACA,QAAA,SAAA,CAAA,KAAA,EAAA,IAAA,CAAA;AACA,OAJA;AAKA,WAAA,KAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,YAAA;AACA,YAAA,SAAA,GAAA,QAAA,CAAA,cAAA,CAAA,aAAA,CAAA;AACA,YAAA,KAAA,GAAA,SAAA,CAAA,gBAAA,CAAA,eAAA,CAAA;AACA,QAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA;AACA,OAJA;AAKA,WAAA,KAAA,CAAA,EAAA,CAAA,eAAA,EAAA,iBAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AAAA,YAAA,CAAA,SAAA,CAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,MAAA,KAAA,aAAA,GAAA,aAAA;AACA,QAAA,IAAA,CAAA,UAAA,CAAA,IAAA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA,CACA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,EAAA;AADA;AAFA,SADA,CAAA;AAQA,OAXA;AAYA,KAjcA;AAkcA;AACA,IAAA,aAncA,2BAmcA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KArcA;AAscA,IAAA,aAtcA,2BAscA;AACA,WAAA,mBAAA,GAAA,KAAA;AACA,KAxcA;AAycA,IAAA,iBAzcA,+BAycA;AAAA;;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA,IAAA,IAAA,EAAA;AACA;AACA,aAAA,UAAA,GAFA,CAGA;;AACA,aAAA,iBAAA;AACA;AACA;;AAEA,MAAA,eAAA,CAAA,KAAA,YAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;AAEA,UAAA,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,gBAAA,QAAA,CAAA,YAAA,IAAA,MAAA,CAAA,UAAA,CAAA,SAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,oCAAA;AAEA,cAAA,cAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,UAAA,EAAA;AACA;AACA;AACA,gBAAA,gBAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,UAAA,EAAA;AACA,sBAAA,SAAA,GAAA,iBAAA,CAAA,UAAA,EAAA,UAAA,CAAA;AACA,sBAAA,aAAA,GAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AAEA,sBAAA,MAAA,GAAA,aAAA,CAAA,CAAA,CAAA;AACA,sBAAA,MAAA,GAAA,aAAA,CAAA,CAAA,CAAA;AAEA,kBAAA,QAAA,CAAA,OAAA,EAAA,aAAA,CAAA,CAAA,CAAA,CAAA;AACA,kBAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA;;AACA,kBAAA,MAAA,CAAA,iBAAA,CAAA,CACA,MAAA,CAAA,UAAA,CAAA,cADA,EAEA,MAAA,CAAA,UAAA,CAAA,cAFA,CAAA;;AAIA,kBAAA,MAAA,CAAA,4BAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,EAbA,CAeA;;;AACA,kBAAA,MAAA,CAAA,UAAA,GAhBA,CAiBA;;;AACA,kBAAA,MAAA,CAAA,iBAAA;AACA,iBAnBA;AAoBA,eAvBA;AAyBA,aA5BA,MA4BA;AACA,cAAA,OAAA,CAAA,KAAA,CAAA,iCAAA;AACA;AACA,WAhCA;AAiCA,SApCA,MAoCA;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,YAAA,KAAA,EAAA,OADA;AAEA,YAAA,OAAA,EAAA,+BAFA;AAGA,YAAA,QAAA,EAAA;AAHA,WAAA;;AAKA,UAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA;AADA,WAAA;AAGA;AACA,OA/CA;AAgDA;AAlgBA,IAlBA;AAuhBA,EAAA,OAvhBA,qBAuhBA;AACA;AACA,SAAA,SAAA,GAFA,CAGA;;AACA,SAAA,eAAA,GAJA,CAKA;;AACA,SAAA,WAAA,GANA,CAQA;;AACA,SAAA,iBAAA,GATA,CAUA;;AACA,SAAA,cAAA;AACA,SAAA,eAAA;AACA,GApiBA;AAqiBA,EAAA,QAAA,oBACA,QAAA,CAAA,CACA,OADA,EAEA,cAFA,EAGA,UAHA,EAIA,YAJA,EAKA,MALA,EAMA,qBANA,CAAA,CADA,CAriBA;AA+iBA,EAAA,KAAA,EAAA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AA/iBA,CAAA","sourcesContent":["<template>\n  <div class=\"models\">\n    <div class=\"draw\">\n      <!-- 左侧控件 -->\n      <div class=\"left-container\">\n        <div class=\"left\" id=\"left\"></div>\n\n        <!-- Mint 按钮 -->\n        <el-button\n          type=\"text\"\n          class=\"mint-btn\"\n          @click=\"centerDialogVisible = true\"\n        >\n          Mint\n        </el-button>\n        <el-dialog\n          title=\"Mint New Model\"\n          :visible.sync=\"centerDialogVisible\"\n          width=\"30%\"\n          center\n        >\n          <MintForm :close=\"closeMintEdit\" />\n          <!-- <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"centerDialogVisible = false\">Cancel</el-button>\n            <el-button type=\"primary\" @click=\"centerDialogVisible = false\">Confirm</el-button>\n          </span> -->\n        </el-dialog>\n        <div class=\"rule-list\">\n          <RuleList />\n        </div>\n      </div>\n      <div class=\"draw-main-box\">\n        <!-- 面板中心区域 -->\n        <div class=\"editor-section\">\n          <div id=\"canvas-main\" class=\"canvas-main\"></div>\n        </div>\n      </div>\n      <!-- 工具导航栏 -->\n      <!-- <div class=\"tools-navbar\">\n        <div class=\"tools-navbar\" id=\"tools-navbar\">\n          <ToolsNavbar />\n        </div>\n      </div> -->\n      <!-- 右侧控件 -->\n      <div class=\"right-default\">\n        <ToolsNavbar />\n      </div>\n      <transition name=\"el-fade-in-linear\">\n        <div class=\"right-container\" v-bind:class=\"{ show: nodeEditShow }\">\n          <NodeEdit :closeNodeEdit=\"closeNodeEdit\" />\n        </div>\n      </transition>\n    </div>\n    <!-- 数据可视化面板 -->\n    <div class=\"data-visual-panel\">\n      <el-button class=\"visual-button\" @click=\"visualPanelVisible = true\">\n        Data Visualization\n      </el-button>\n    </div>\n    <el-dialog\n      title=\"Modeling data visualization\"\n      :visible.sync=\"visualPanelVisible\"\n      class=\"data-dialog\"\n      width=\"1200px\"\n    >\n      <VisualPanel />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport VisualPanel from \"./VisualPanel\";\nimport ModelUpload from \"./ModelUpload\";\nimport NodeEdit from \"./NodeEdit\";\nimport ToolsNavbar from \"./RightToolsNavbar\";\nimport MintForm from \"../Template/MintForm\";\nimport RuleList from \"../create/RuleList\";\nimport { Addon, Graph, Shape } from \"@antv/x6\";\nconst { Stencil } = Addon;\nconst { Rect, Circle } = Shape;\n// 导入链接桩配置\nimport { PortsConfig } from \"../../graph/portsConfig\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { querymodel } from \"../../api/index\";\nimport { setStore } from \"../../utils/storage\";\nimport { connectMetamask } from \"../../api/web3/contracts\";\nimport { downloadFromIPFS } from \"../../utils/ipfsUtil\";\nimport { querymetadata } from \"../../api/index\";\nimport { decryptDataEOA, decryptDataNormal } from \"../../utils/cryptoUtil\";\n\nexport default {\n  data() {\n    return {\n      loaded: false,\n      nodeEditShow: true,\n      visualPanelVisible: false,\n      // uploadShow: false,\n      centerDialogVisible: false,\n    };\n  },\n  components: {\n    VisualPanel,\n    ModelUpload,\n    NodeEdit,\n    ToolsNavbar,\n    MintForm,\n    RuleList,\n  },\n  methods: {\n    ...mapMutations([\n      \"STORAGE_GRAPH\",\n      \"LOAD_GRAPH\",\n      \"POSITIONING_GRAPH\",\n      \"INIT_GRAPH\",\n      \"CLOSE_UPLOAD_DIALOG\",\n      \"SET_EDIT_CELLS\",\n      \"MODIFY_HISTORY_SIMULATE_DATA\",\n      \"MODIFY_CONFIGDATA\",\n      \"SET_USER\",\n      \"LOAD_RULE_LISTS\",\n    ]),\n\n    // 画布初始化\n    initGrapg() {\n      let cur_graph = new Graph({\n        container: document.getElementById(\"canvas-main\"),\n        selecting: true,\n        autoResize: true,\n        history: true,\n        background: {\n          color: \"#fff\",\n        },\n        grid: {\n          size: 30,\n          visible: true,\n        },\n        snapline: {\n          enabled: true,\n          sharp: true,\n        },\n        scroller: {\n          enabled: true,\n          pageVisible: false,\n          pageBreak: false,\n          pannable: true,\n          modifiers: [\"shift\"],\n        },\n        mousewheel: {\n          enabled: true,\n          zoomAtMousePosition: true,\n          modifiers: [\"ctrl\", \"meta\"],\n          minScale: 0.5,\n          maxScale: 3,\n        },\n        connecting: {\n          router: {\n            name: \"manhattan\",\n            args: {\n              padding: 1,\n            },\n          },\n          connector: {\n            name: \"rounded\",\n            args: {\n              radius: 8,\n            },\n          },\n          anchor: \"center\",\n          connectionPoint: \"anchor\",\n          allowBlank: false,\n          snap: {\n            radius: 20,\n          },\n          createEdge() {\n            return new Shape.Edge({\n              attrs: {\n                line: {\n                  // stroke: {\n                  //   type: \"linearGradient\",\n                  //   stops: [\n                  //     { offset: \"0%\", color: \"#ccc\" },\n                  //     { offset: \"50%\", color: \"#73d13d\" },\n                  //     { offset: \"100%\", color: \"#ccc\" },\n                  //   ],\n                  // },\n                  stroke: \"#b3b3b3\",\n                  strokeWidth: 2,\n                  targetMarker: {\n                    name: \"block\",\n                    width: 6,\n                    height: 8,\n                    // fill: \"#ccc\", // 使用自定义填充色\n                    stroke: \"#b3b3b3\", // 使用自定义边框色\n                  },\n                },\n              },\n\n              data: {\n                type: \"Edge\",\n                inside: 0.5,\n                outside: 0.5,\n              },\n              zIndex: 0,\n            });\n          },\n          validateConnection({ targetMagnet }) {\n            return !!targetMagnet;\n          },\n        },\n        highlighting: {\n          magnetAdsorbed: {\n            name: \"stroke\",\n            args: {\n              attrs: {\n                fill: \"#5F95FF\",\n                stroke: \"#5F95FF\",\n              },\n            },\n          },\n        },\n        resizing: {\n          enabled: true,\n        },\n        selecting: {\n          enabled: true,\n          rubberband: true,\n          showNodeSelectionBox: true,\n        },\n\n        keyboard: true,\n        clipboard: true,\n      });\n      this.INIT_GRAPH(cur_graph);\n    },\n\n    // 初始化画布侧边栏\n    initStencil() {\n      this.stencil = new Stencil({\n        title: \"Components\",\n        target: this.graph,\n\n        //collapsable: true,\n        stencilGraphWidth: 200,\n        stencilGraphHeight: 180,\n        groups: [\n          {\n            name: \"Components\",\n          },\n        ],\n      });\n\n      document.getElementById(\"left\").appendChild(this.stencil.container);\n      const stake = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            stakeData: {\n              rewardPolicyFrom: \"\",\n              stakeAmount: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n            },\n          },\n          type: \"Stake\",\n        },\n        attrs: {\n          rect: {\n            fill: \"rgb(156,192,2327)\",\n            stroke: \"#E6A23C\",\n            strokeWidth: 0,\n          },\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n          text: { text: \"Stake\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      const unStake = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            unstakeData: {\n              coolDownTime: 0,\n              unstakeAmount: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n            },\n          },\n          type: \"Unstake\",\n        },\n        attrs: {\n          rect: { fill: \"rgb(164,205,231)\", stroke: \"#67C23A\", strokeWidth: 0 },\n          text: { text: \"Unstake\", fill: \"#fff\" },\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n        },\n        ports: PortsConfig,\n      });\n\n      const token = new Circle({\n        width: 60,\n        height: 60,\n        data: {\n          //业务数据\n          nodeData: {\n            tokenData: {\n              totalSupply: 0,\n              allocations: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n              community: {\n                allocations: [\n                  { name: \"Airdrop\", prop: 0, class: \"airdrop-turntable\" },\n                  { name: \"Staking\", prop: 0, class: \"staking-turntable\" },\n                ],\n                stakingLifetime: 0,\n                stakingRewardRefresh: 0,\n                stakingRewardDecreaseFactor: 0,\n              },\n            },\n          },\n          type: \"Token\",\n        },\n        attrs: {\n          circle: {\n            fill: \"rgb(183,192,228)\",\n            strokeWidth: 0,\n            stroke: \"#409EFF\",\n          },\n          text: { text: \"Token\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      const vest = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            vestData: {\n              vestAmount: [\n                {\n                  name: \"Team\",\n                  prop: 0,\n                  class: \"team-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Investor\",\n                  prop: 0,\n                  class: \"investor-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Advisor\",\n                  prop: 0,\n                  class: \"advisor-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Foundation\",\n                  prop: 0,\n                  class: \"foundation-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Community\",\n                  prop: 0,\n                  class: \"community-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n              ],\n            },\n          },\n          type: \"Vest\",\n        },\n        attrs: {\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n          rect: {\n            fill: \"rgb(205,149,187)\",\n            stroke: \"#F56C6C\",\n            // stroke: {\n            //   type: \"linearGradient\",\n            //   stops: [\n            //     { offset: \"0%\", color: \"#ccc\" },\n            //     { offset: \"50%\", color: \"#73d13d\" },\n            //     { offset: \"100%\", color: \"#ccc\" },\n            //   ],\n            // },\n            strokeWidth: 0,\n          },\n          text: { text: \"Vest\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      this.stencil.load(\n        [token.clone(), vest.clone(), stake.clone(), unStake.clone()],\n        \"Components\"\n      );\n    },\n    //初始化快捷键\n    initShortcutkey() {\n      //快捷事件\n      this.graph.bindKey([\"meta+c\", \"ctrl+c\"], () => {\n        const cells = this.graph.getSelectedCells();\n        if (cells.length) {\n          this.graph.copy(cells);\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+x\", \"ctrl+x\"], () => {\n        const cells = this.graph.getSelectedCells();\n        if (cells.length) {\n          this.graph.cut(cells);\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+v\", \"ctrl+v\"], () => {\n        if (!this.graph.isClipboardEmpty()) {\n          const cells = this.graph.paste({ offset: 32 });\n          this.graph.cleanSelection();\n          this.graph.select(cells);\n        }\n        return false;\n      });\n      //undo redo\n      this.graph.bindKey([\"meta+z\", \"ctrl+z\"], () => {\n        if (this.graph.history.canUndo()) {\n          this.graph.history.undo();\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+shift+z\", \"ctrl+shift+z\"], () => {\n        if (this.graph.history.canRedo()) {\n          this.graph.history.redo();\n        }\n        return false;\n      });\n\n      // select all\n      this.graph.bindKey([\"meta+a\", \"ctrl+a\"], () => {\n        const nodes = this.graph.getNodes();\n        if (nodes) {\n          this.graph.select(nodes);\n        }\n      });\n\n      // zoom\n      this.graph.bindKey([\"ctrl+1\", \"meta+1\"], () => {\n        const zoom = this.graph.zoom();\n        if (zoom < 1.5) {\n          this.graph.zoom(0.1);\n        }\n      });\n      this.graph.bindKey([\"ctrl+2\", \"meta+2\"], () => {\n        const zoom = this.graph.zoom();\n        if (zoom > 0.5) {\n          this.graph.zoom(-0.1);\n        }\n      });\n    },\n    initWatchEvent() {\n      // 节点编辑\n      this.graph.on(\"cell:contextmenu\", ({ e, x, y, cell, view }) => {\n        // TODO (Xufei) 需要重新设计 Token 不能被编辑的逻辑 Token.type == 2 的不能被编辑？\n        // if (\n        //   cell.getData().type == \"Token\" &&\n        //   this.graph.getPredecessors(cell).length != 0\n        // ) {\n        //   this.$message({\n        //     showClose: true,\n        //     message: \"The current node cannot be edited!\",\n        //     type: \"warning\",\n        //   });\n        //   return;\n        // }\n        this.nodeEditShow = false;\n        this.SET_EDIT_CELLS(cell);\n      });\n      // 注册监听事件，当新增节点或边调用，实时存储\n      this.graph.on(\"node:added\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n\n      this.graph.on(\"cell:added\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      this.graph.on(\"cell:changed\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      this.graph.on(\"cell:removed\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      // 控制连接桩显示/隐藏\n      const showPorts = (ports, show) => {\n        for (let i = 0, len = ports.length; i < len; i = i + 1) {\n          ports[i].style.visibility = show ? \"visible\" : \"hidden\";\n        }\n      };\n      this.graph.on(\"node:mouseenter\", () => {\n        const container = document.getElementById(\"canvas-main\");\n        const ports = container.querySelectorAll(\".x6-port-body\");\n        showPorts(ports, true);\n      });\n      this.graph.on(\"node:mouseleave\", () => {\n        const container = document.getElementById(\"canvas-main\");\n        const ports = container.querySelectorAll(\".x6-port-body\");\n        showPorts(ports, false);\n      });\n      this.graph.on(\"cell:dblclick\", ({ cell, e }) => {\n        const name = cell.isEdge() ? \"edge-editor\" : \"node-editor\";\n        cell.removeTool(name);\n        cell.addTools([\n          {\n            name,\n            args: {\n              event: e,\n            },\n          },\n        ]);\n      });\n    },\n    // 节点编辑面板\n    closeNodeEdit() {\n      this.nodeEditShow = true;\n    },\n    closeMintEdit() {\n      this.centerDialogVisible = false;\n    },\n    loadGraphFromBack() {\n      if (this.$route.query.nftId == null) {\n        //导入已有节点信息\n        this.LOAD_GRAPH();\n        //进行一次聚焦\n        this.POSITIONING_GRAPH();\n        return;\n      }\n\n      connectMetamask(this.web3Provider).then((response) => {\n        if (response.status) {\n          this.SET_USER(response.account[0]);\n\n          querymetadata(this.$route.query.nftId).then((metadata) => {\n            if (metadata.message_code == this.statusCode.SUCCESSED) {\n              console.log(\"SUCCESS sync mint data to database\");\n\n              decryptDataEOA(metadata.data.enckey, this.user).then((decryptKey) => {\n                // TODO 对secret data 解密\n                // let decryptSecretData = decryptDataNormal();\n                downloadFromIPFS(metadata.data.privUrl).then((secretData) => {\n                  let decrypted = decryptDataNormal(secretData, decryptKey);\n                  let subSecretData = decrypted.split(\",,,\");\n\n                  let params = subSecretData[1];\n                  let result = subSecretData[2];\n\n                  setStore(\"graph\", subSecretData[0]);\n                  params = JSON.parse(params);\n                  this.MODIFY_CONFIGDATA([\n                    params.configData.simulationDays,\n                    params.configData.simulationSlot,\n                  ]);\n                  this.MODIFY_HISTORY_SIMULATE_DATA(JSON.parse(result));\n                   \n                  //导入已有节点信息\n                  this.LOAD_GRAPH();\n                  //进行一次聚焦\n                  this.POSITIONING_GRAPH();\n                });\n              });\n\n            } else {\n              console.error(\"FAIL sync mint data to database\");\n            }\n          });\n        } else {\n          this.$notify.error({\n            title: \"Error\",\n            message: \"Identity verification failed!\",\n            position: \"bottom-right\",\n          });\n          this.$router.push({\n            path: \"/create\",\n          });\n        }\n      });\n    },\n  },\n\n  mounted() {\n    // 初始化面板\n    this.initGrapg();\n    // 初始化面板相关快捷键\n    this.initShortcutkey();\n    // 初始化左侧控件\n    this.initStencil();\n\n    //判断是否是由详情页跳转过来的\n    this.loadGraphFromBack();\n    //初始化相关监听事件\n    this.initWatchEvent();\n    this.LOAD_RULE_LISTS();\n  },\n  computed: {\n    ...mapState([\n      \"graph\",\n      \"uploadDialog\",\n      \"editNode\",\n      \"statusCode\",\n      \"user\",\n      \"historySimulateData\",\n    ]),\n  },\n  watch: {\n    // uploadDialog(val) {\n    //   this.uploadShow = val;\n    // },\n    // uploadShow(val) {\n    //   if (!val) {\n    //     this.CLOSE_UPLOAD_DIALOG();\n    //   }\n    // },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.models {\n  .draw {\n    .left-container {\n      width: 200px;\n      height: 100%;\n      .left {\n        position: fixed;\n        top: 120px;\n        width: 200px;\n        height: 220px;\n        left: 60px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n        border-radius: 20px;\n        // border: #e9e9e9 1px solid;\n\n        /deep/ .x6-widget-stencil-content {\n          background-color: #fff;\n        }\n        /deep/ .x6-widget-stencil-group-title {\n          background-color: #fff;\n        }\n        /deep/ .x6-widget-stencil-content {\n          border-radius: inherit;\n        }\n        /deep/.x6-widget-stencil-title {\n          border-radius: 20px;\n        }\n        /deep/ .x6-widget-stencil {\n          border-radius: 20px;\n        }\n      }\n\n      .mint-btn {\n        background-color: #fff !important;\n        border: #858585 !important;\n        color: #616060 !important;\n        position: fixed;\n        top: 450px;\n        width: 200px;\n        height: 40px;\n        left: 60px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8) !important;\n        border-radius: 20px;\n      }\n\n      .rule-list {\n        position: fixed;\n        top: 520px;\n        left: 60px;\n        border-radius: 20px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n        height: calc(100% - 580px);\n      }\n    }\n\n    .draw-main-box {\n      position: fixed;\n      left: 250px;\n      // overflow: scroll;\n      width: calc(100% - 250px);\n      height: 100%;\n      //background: url(\"../../assets/bg.png\");\n\n      .editor-section {\n        display: flex;\n        // overflow: scroll;\n        margin-top: 40px;\n        margin-left: 60px;\n        //width: 70%;\n        left: 250px;\n        width: calc(100% - 480px);\n        height: calc(100% - 180px);\n        // border: solid 2px #f4f4f4;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n        border-radius: 30px;\n\n        /deep/ .x6-graph-scroller {\n          border-radius: 30px;\n        }\n\n        /deep/ .x6-graph-scroller-pannable {\n          border-radius: 30px;\n        }\n\n        .canvas-main {\n          flex: 1;\n        }\n      }\n    }\n    .right-default {\n      /* position: fixed;\n      height: calc(100% - 180px);\n      width: 280px;\n      top: 120px;\n      right: 3%;\n      background-color: #ffffff;\n      overflow: scroll;\n      border-radius: 30px;\n      border: 1px solid rgb(232, 231, 231);\n      box-shadow: 0 0 3px rgba(180, 180, 180, 0.8);  */\n\n      .config-data-input {\n        width: 200px;\n        margin-left: 15px;\n        margin-top: 20px;\n      }\n      .day-slider {\n        margin-left: 15px;\n        margin-bottom: 20px;\n        width: 250px;\n        /deep/ .el-slider__bar {\n          background-color: rgb(94, 91, 91);\n        }\n        /deep/ .el-slider__button {\n          border: 2px solid rgb(94, 91, 91);\n          transition: 0s;\n        }\n      }\n      .timer {\n        float: left;\n\n        // margin: 7px 0px 0px 15px;\n\n        width: 20px;\n      }\n    }\n    .right-container {\n      width: 300px;\n      position: fixed;\n      top: 50px;\n      right: 0px;\n      height: 82.5%;\n    }\n  }\n  .data-visual-panel {\n    position: fixed;\n    bottom: 20px;\n    left: 20px;\n    .visual-button {\n      // display: flex;\n      // width: 100%;\n      // &:hover {\n      //   cursor: pointer;\n      // }\n      // span {\n      //   margin: auto;\n      //   padding: 0.3em 1em 0.5em;\n      //   background: #409eff;\n      //   color: white;\n\n      //   border-radius: 3px;\n      //   box-shadow: 0 0 0.5em #858585;\n      //   // animation: shake 2s ease 0s infinite;\n      //   // animation-play-state: paused;\n\n      //   // &:hover {\n      //   //   animation-play-state: running;\n      //   // }\n      // }\n\n      background-color: #fff !important;\n      border: #858585 !important;\n      color: #616060 !important;\n      position: fixed;\n      top: 380px;\n      width: 200px;\n      height: 40px;\n      left: 60px;\n      box-shadow: 0 0 6px rgba(180, 180, 180, 0.8) !important;\n      border-radius: 20px;\n    }\n  }\n  .data-dialog {\n    position: relative;\n    top: -130px;\n  }\n  .show {\n    visibility: hidden;\n  }\n  .visual-dialog {\n    font-size: 20px;\n  }\n  @keyframes shake {\n    from {\n      transform: rotate(0deg);\n    }\n    4% {\n      transform: rotate(5deg);\n    }\n    12.5% {\n      transform: rotate(-5deg);\n    }\n    21% {\n      transform: rotate(5deg);\n    }\n    29% {\n      transform: rotate(-5deg);\n    }\n    37.5% {\n      transform: rotate(5deg);\n    }\n    46% {\n      transform: rotate(-5deg);\n    }\n    50%,\n    to {\n      transform: rotate(0deg);\n    }\n  }\n}\n</style>"],"sourceRoot":"src/components/create"}]}