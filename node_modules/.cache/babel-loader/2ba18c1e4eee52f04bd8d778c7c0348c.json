{"remainingRequest":"/Users/xufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js!/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xufei/Desktop/FlowModel/src/components/create/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xufei/Desktop/FlowModel/src/components/create/LineChart.vue","mtime":1653708835747},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js","mtime":1653708688758},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js","mtime":1653708694636}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IExpbmUgfSBmcm9tICJAYW50di9nMnBsb3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImxpbmVDaGFydCIsCiAgcHJvcHM6IHsKICAgIGxpbmVkYXRhOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBIZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA1MDAKICAgIH0sCiAgICBXaWR0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDcwMAogICAgfSwKICAgIHhGaWVsZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJ0aW1lIgogICAgfSwKICAgIHlGaWVsZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJ2YWx1ZSIKICAgIH0sCiAgICBjYXRlZ29yeTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJjYXRlZ29yeSIKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhbHJlYWR5UmVuZGVyOiBmYWxzZSwKICAgICAgTGluZVBsb3Q6IG51bGwsCiAgICAgIHRva2VuVHlwZTogW10sCiAgICAgIHNlbGVjdFRva2VuOiBudWxsLAogICAgICBjaGFydFNob3c6IHRydWUKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0RzJQbG90KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVDb21tYW5kOiBmdW5jdGlvbiBoYW5kbGVDb21tYW5kKGNvbW1hbmQpIHsKICAgICAgdmFyIHNlbGVjdERhdGEgPSBbXTsKICAgICAgdGhpcy5zZWxlY3RUb2tlbiA9IGNvbW1hbmQ7IC8v5aaC5p6c5pyq6YCJ5pWw5o2u5YiZ5riy5p+T5Li656m6CgogICAgICBpZiAodGhpcy5saW5lZGF0YS5sZW5ndGggPT0gMCkgewogICAgICAgIHRoaXMuTGluZVBsb3QuY2hhbmdlRGF0YShbXSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy/moLnmja7miYDpgInmi6nnmoR0b2tlbuexu+WIq+S+v+WIqeWvueW6lOeahOWOhuWPsuaVsOaNrgogICAgICAgIHRoaXMubGluZWRhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgaXRlbS5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICAgICAgaWYgKGVsZW1lbnQudHlwZSA9PSBjb21tYW5kKSB7CiAgICAgICAgICAgICAgZWxlbWVudC5kYXRhLmZvckVhY2goZnVuY3Rpb24gKG1ldGFEYXRhKSB7CiAgICAgICAgICAgICAgICBtZXRhRGF0YS5kYXRhLmZvckVhY2goZnVuY3Rpb24gKHJvdykgewogICAgICAgICAgICAgICAgICBzZWxlY3REYXRhLnB1c2goewogICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBpdGVtLmNhdGVnb3J5ICsgIi0iICsgbWV0YURhdGEudHlwZSwKICAgICAgICAgICAgICAgICAgICB0aW1lOiByb3cudGltZSwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcm93LnZhbHVlCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IC8v5aaC5p6c5LuO5pyq5riy5p+T6L+H5YiZ5riy5p+TCgoKICAgICAgaWYgKCF0aGlzLmFscmVhZHlSZW5kZXIpIHsKICAgICAgICB0aGlzLkxpbmVQbG90LnJlbmRlcigpOwogICAgICB9IC8v5ZCm5YiZ55u05o6l5pu05paw5pWw5o2uCgoKICAgICAgdGhpcy5MaW5lUGxvdC5jaGFuZ2VEYXRhKHNlbGVjdERhdGEpOwogICAgfSwKCiAgICAvKioKICAgICAqIGNoYXJ05Zu+6KGo5Yid5aeL5YyWCiAgICAgKiDpnIDopoHmoLnmja7lkI7mnJ/nmoTmlbDmja7liqjmgIHkv67mlLnlhbbkuK3nmoR477yMeeWtl+autQogICAgICovCiAgICBpbml0RzJQbG90OiBmdW5jdGlvbiBpbml0RzJQbG90KCkgewogICAgICB0aGlzLkxpbmVQbG90ID0gbmV3IExpbmUodGhpcy4kcmVmcy5saW5lQ2hhcnQsIHsKICAgICAgICBkYXRhOiB0aGlzLmxpbmVkYXRhLAogICAgICAgIGhlaWdodDogdGhpcy5IZWlnaHQsCiAgICAgICAgd2lkdGg6IHRoaXMuV2lkdGgsCiAgICAgICAgeEZpZWxkOiB0aGlzLnhGaWVsZCwKICAgICAgICB5RmllbGQ6IHRoaXMueUZpZWxkLAogICAgICAgIHNlcmllc0ZpZWxkOiB0aGlzLmNhdGVnb3J5LAogICAgICAgIHNtb290aDogdHJ1ZSwKICAgICAgICB5QXhpczogewogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgLy8g5pWw5YC85qC85byP5YyW5Li65Y2D5YiG5L2NCiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKHYpIHsKICAgICAgICAgICAgICByZXR1cm4gIiIuY29uY2F0KHYpLnJlcGxhY2UoL1xkezEsM30oPz0oXGR7M30pKyQpL2csIGZ1bmN0aW9uIChzKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIiIuY29uY2F0KHMsICIsIik7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBncmlkOiB7CiAgICAgICAgICAgIGxpbmU6IHsKICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgc3Ryb2tlOiAiYmxhY2siLAogICAgICAgICAgICAgICAgbGluZVdpZHRoOiAwLjIsCiAgICAgICAgICAgICAgICBsaW5lRGFzaDogWzQsIDVdLAogICAgICAgICAgICAgICAgc3Ryb2tlT3BhY2l0eTogMC43LAogICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICJibGFjayIsCiAgICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAxMCwKICAgICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDUsCiAgICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRZOiA1LAogICAgICAgICAgICAgICAgY3Vyc29yOiAicG9pbnRlciIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNsaWRlcjogewogICAgICAgICAgc3RhcnQ6IDAsCiAgICAgICAgICBlbmQ6IDEKICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgaWYgKHRoaXMubGluZWRhdGEubGVuZ3RoICE9IDApIHsKICAgICAgICB0aGlzLkxpbmVQbG90LnJlbmRlcigpOwogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgLyoqCiAgICAgKiDnm5HlkKzlr7nlupTmlbDmja7lrZfmrrXvvIzlvZPmlbDmja7lj5HnlJ/lj5jljJbml7bph43mlrDmuLLmn5MKICAgICAqLwogICAgbGluZWRhdGE6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgICB0aGlzLnRva2VuVHlwZSA9IFtdOwoKICAgICAgICBpZiAodGhpcy5saW5lZGF0YS5sZW5ndGggIT0gMCkgewogICAgICAgICAgdGhpcy5jaGFydFNob3cgPSBmYWxzZTsKICAgICAgICAgIHRoaXMubGluZWRhdGFbMF0uZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgIF90aGlzLnRva2VuVHlwZS5wdXNoKGVsZW1lbnQudHlwZSk7CiAgICAgICAgICB9KTsgLy/lvZPooqvpgInmi6nmlbDmja7kuI3kuLrnqbrml7bvvIzkuJTmm77nu4/mnKrpgInmi6nov4fvvIznm7TmjqXkvb/nlKjnrKzkuIDkuKp0b2tlbuWtl+auteS9nOS4uuWxleekugoKICAgICAgICAgIGlmICh0aGlzLnNlbGVjdFRva2VuID09IG51bGwpIHsKICAgICAgICAgICAgdGhpcy5oYW5kbGVDb21tYW5kKHRoaXMudG9rZW5UeXBlWzBdKTsKICAgICAgICAgICAgdGhpcy5zZWxlY3RUb2tlbiA9IHRoaXMudG9rZW5UeXBlWzBdOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5oYW5kbGVDb21tYW5kKHRoaXMuc2VsZWN0VG9rZW4pOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmNoYXJ0U2hvdyA9IHRydWU7CiAgICAgICAgfQogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"box\">\n    <div v-bind:class=\"{ show: chartShow }\">\n      <div class=\"attr-select\">\n        <el-dropdown @command=\"handleCommand\">\n          <span class=\"el-dropdown-link\">\n            {{ this.selectToken }}\n            <i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item\n              v-for=\"item in tokenType\"\n              :key=\"item\"\n              :command=\"item\"\n              >{{ item }}</el-dropdown-item\n            >\n          </el-dropdown-menu>\n        </el-dropdown>\n      </div>\n      <div id=\"lineChart\" ref=\"lineChart\" class=\"lineChart\"></div>\n    </div>\n    <!-- 空状态时显示 -->\n    <el-empty\n      description=\"Please select data first!\"\n      class=\"empty-box\"\n      v-bind:class=\"{ show: !chartShow }\"\n    ></el-empty>\n  </div>\n</template>\n \n<script>\nimport { Line } from \"@antv/g2plot\";\nexport default {\n  name: \"lineChart\",\n  props: {\n    linedata: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    Height: {\n      type: Number,\n      default: 500,\n    },\n    Width: {\n      type: Number,\n      default: 700,\n    },\n    xField: {\n      type: String,\n      default: \"time\",\n    },\n    yField: {\n      type: String,\n      default: \"value\",\n    },\n    category: {\n      type: String,\n      default: \"category\",\n    },\n  },\n  data() {\n    return {\n      alreadyRender: false,\n      LinePlot: null,\n      tokenType: [],\n      selectToken: null,\n      chartShow: true,\n    };\n  },\n  mounted() {\n    this.initG2Plot();\n  },\n  methods: {\n    handleCommand(command) {\n      let selectData = [];\n      this.selectToken = command;\n      //如果未选数据则渲染为空\n      if (this.linedata.length == 0) {\n        this.LinePlot.changeData([]);\n      } else {\n        //根据所选择的token类别便利对应的历史数据\n        this.linedata.forEach((item) => {\n          item.data.forEach((element) => {\n            if (element.type == command) {\n              element.data.forEach((metaData) => {\n                metaData.data.forEach((row) => {\n                  selectData.push({\n                    category: item.category + \"-\" + metaData.type,\n                    time: row.time,\n                    value: row.value,\n                  });\n                });\n              });\n            }\n          });\n        });\n      }\n      //如果从未渲染过则渲染\n      if (!this.alreadyRender) {\n        this.LinePlot.render();\n      }\n      //否则直接更新数据\n      this.LinePlot.changeData(selectData);\n    },\n\n    /**\n     * chart图表初始化\n     * 需要根据后期的数据动态修改其中的x，y字段\n     */\n    initG2Plot() {\n      this.LinePlot = new Line(this.$refs.lineChart, {\n        data: this.linedata,\n        height: this.Height,\n        width: this.Width,\n        xField: this.xField,\n        yField: this.yField,\n        seriesField: this.category,\n        smooth: true,\n\n        yAxis: {\n          label: {\n            // 数值格式化为千分位\n            formatter: (v) =>\n              `${v}`.replace(/\\d{1,3}(?=(\\d{3})+$)/g, (s) => `${s},`),\n          },\n          grid: {\n            line: {\n              style: {\n                stroke: \"black\",\n                lineWidth: 0.2,\n                lineDash: [4, 5],\n                strokeOpacity: 0.7,\n                shadowColor: \"black\",\n                shadowBlur: 10,\n                shadowOffsetX: 5,\n                shadowOffsetY: 5,\n                cursor: \"pointer\",\n              },\n            },\n          },\n        },\n        slider:{\n          start:0,\n          end:1\n        }\n      });\n      if (this.linedata.length != 0) {\n        this.LinePlot.render();\n      }\n    },\n  },\n  watch: {\n    /**\n     * 监听对应数据字段，当数据发生变化时重新渲染\n     */\n    linedata: {\n      handler() {\n        this.tokenType = [];\n        if (this.linedata.length != 0) {\n          this.chartShow = false;\n          this.linedata[0].data.forEach((element) => {\n            this.tokenType.push(element.type);\n          });\n          //当被选择数据不为空时，且曾经未选择过，直接使用第一个token字段作为展示\n          if (this.selectToken == null) {\n            this.handleCommand(this.tokenType[0]);\n            this.selectToken = this.tokenType[0];\n          } else {\n            this.handleCommand(this.selectToken);\n          }\n        } else {\n          this.chartShow = true;\n        }\n      },\n      deep: true,\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.box {\n  padding: 5px;\n  .attr-select {\n    span {\n      margin-right: 5px;\n      font-size: 14px;\n      font-weight: 600;\n    }\n  }\n  .lineChart {\n    margin-top: 30px;\n  }\n  .empty-box {\n    height: 546px;\n  }\n}\n.show {\n  display: none !important;\n}\n</style>"],"sourceRoot":"src/components/create"}]}