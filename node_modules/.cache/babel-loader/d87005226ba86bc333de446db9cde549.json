{"remainingRequest":"/Users/wangxufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js!/Users/wangxufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangxufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangxufei/Desktop/FlowModel/src/components/create/Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangxufei/Desktop/FlowModel/src/components/create/Editor.vue","mtime":1652163070441},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvd2FuZ3h1ZmVpL0Rlc2t0b3AvRmxvd01vZGVsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy93YW5neHVmZWkvRGVza3RvcC9GbG93TW9kZWwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVmlzdWFsUGFuZWwgZnJvbSAiLi9WaXN1YWxQYW5lbCI7CmltcG9ydCBNb2RlbFVwbG9hZCBmcm9tICIuL01vZGVsVXBsb2FkIjsKaW1wb3J0IE5vZGVFZGl0IGZyb20gIi4vTm9kZUVkaXQiOwppbXBvcnQgVG9vbHNOYXZiYXIgZnJvbSAiLi9Ub29sc05hdmJhciI7CmltcG9ydCBNaW50Rm9ybSBmcm9tICIuLi9UZW1wbGF0ZS9NaW50Rm9ybSI7CmltcG9ydCBSdWxlTGlzdCBmcm9tICIuLi9jcmVhdGUvUnVsZUxpc3QiOwppbXBvcnQgeyBBZGRvbiwgR3JhcGgsIFNoYXBlIH0gZnJvbSAiQGFudHYveDYiOwp2YXIgU3RlbmNpbCA9IEFkZG9uLlN0ZW5jaWw7CnZhciBSZWN0ID0gU2hhcGUuUmVjdCwKICAgIENpcmNsZSA9IFNoYXBlLkNpcmNsZTsgLy8g5a+85YWl6ZO+5o6l5qGp6YWN572uCgppbXBvcnQgeyBQb3J0c0NvbmZpZyB9IGZyb20gIi4uLy4uL2dyYXBoL3BvcnRzQ29uZmlnIjsKaW1wb3J0IHsgbWFwU3RhdGUsIG1hcE11dGF0aW9ucyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgeyBxdWVyeW1vZGVsIH0gZnJvbSAiLi4vLi4vYXBpL2luZGV4IjsKaW1wb3J0IHsgc2V0U3RvcmUgfSBmcm9tICIuLi8uLi91dGlscy9zdG9yYWdlIjsKaW1wb3J0IHsgY29ubmVjdE1ldGFtYXNrIH0gZnJvbSAiLi4vLi4vYXBpL3dlYjMvY29udHJhY3RzIjsKCnZhciBhbnRscjQgPSByZXF1aXJlKCJhbnRscjQiKTsKCnZhciBJbnB1dFN0cmVhbSA9IGFudGxyNC5JbnB1dFN0cmVhbTsKdmFyIENvbW1vblRva2VuU3RyZWFtID0gYW50bHI0LkNvbW1vblRva2VuU3RyZWFtOwoKdmFyIEdyYW1tYXJQYXJzZXIgPSByZXF1aXJlKCIuLi8uLi9wYXJzZXIvUHJvcGVydHlQYXJzZXIiKS5Qcm9wZXJ0eVBhcnNlcjsKCnZhciBHcmFtbWFyTGV4ZXIgPSByZXF1aXJlKCIuLi8uLi9wYXJzZXIvUHJvcGVydHlMZXhlciIpLlByb3BlcnR5TGV4ZXI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRlZDogZmFsc2UsCiAgICAgIG5vZGVFZGl0U2hvdzogdHJ1ZSwKICAgICAgdmlzdWFsUGFuZWxWaXNpYmxlOiBmYWxzZSwKICAgICAgLy8gdXBsb2FkU2hvdzogZmFsc2UsCiAgICAgIGNlbnRlckRpYWxvZ1Zpc2libGU6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgVmlzdWFsUGFuZWw6IFZpc3VhbFBhbmVsLAogICAgTW9kZWxVcGxvYWQ6IE1vZGVsVXBsb2FkLAogICAgTm9kZUVkaXQ6IE5vZGVFZGl0LAogICAgVG9vbHNOYXZiYXI6IFRvb2xzTmF2YmFyLAogICAgTWludEZvcm06IE1pbnRGb3JtLAogICAgUnVsZUxpc3Q6IFJ1bGVMaXN0CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoWyJTVE9SQUdFX0dSQVBIIiwgIkxPQURfR1JBUEgiLCAiUE9TSVRJT05JTkdfR1JBUEgiLCAiSU5JVF9HUkFQSCIsICJDTE9TRV9VUExPQURfRElBTE9HIiwgIlNFVF9FRElUX0NFTExTIiwgIk1PRElGWV9ISVNUT1JZX1NJTVVMQVRFX0RBVEEiLCAiTU9ESUZZX0NPTkZJR0RBVEEiLCAiU0VUX1VTRVIiLCAiTE9BRF9SVUxFX0xJU1RTIl0pLCB7CiAgICAvLyDnlLvluIPliJ3lp4vljJYKICAgIGluaXRHcmFwZzogZnVuY3Rpb24gaW5pdEdyYXBnKCkgewogICAgICB2YXIgX0dyYXBoOwoKICAgICAgdmFyIGN1cl9ncmFwaCA9IG5ldyBHcmFwaCgoX0dyYXBoID0gewogICAgICAgIGNvbnRhaW5lcjogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNhbnZhcy1tYWluIiksCiAgICAgICAgc2VsZWN0aW5nOiB0cnVlLAogICAgICAgIGF1dG9SZXNpemU6IHRydWUsCiAgICAgICAgaGlzdG9yeTogdHJ1ZSwKICAgICAgICBiYWNrZ3JvdW5kOiB7CiAgICAgICAgICBjb2xvcjogIiNmZmYiCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBzaXplOiAzMCwKICAgICAgICAgIHZpc2libGU6IHRydWUKICAgICAgICB9LAogICAgICAgIHNuYXBsaW5lOiB7CiAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgc2hhcnA6IHRydWUKICAgICAgICB9LAogICAgICAgIHNjcm9sbGVyOiB7CiAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgcGFnZVZpc2libGU6IGZhbHNlLAogICAgICAgICAgcGFnZUJyZWFrOiBmYWxzZSwKICAgICAgICAgIHBhbm5hYmxlOiB0cnVlLAogICAgICAgICAgbW9kaWZpZXJzOiBbInNoaWZ0Il0KICAgICAgICB9LAogICAgICAgIG1vdXNld2hlZWw6IHsKICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICB6b29tQXRNb3VzZVBvc2l0aW9uOiB0cnVlLAogICAgICAgICAgbW9kaWZpZXJzOiBbImN0cmwiLCAibWV0YSJdLAogICAgICAgICAgbWluU2NhbGU6IDAuNSwKICAgICAgICAgIG1heFNjYWxlOiAzCiAgICAgICAgfSwKICAgICAgICBjb25uZWN0aW5nOiB7CiAgICAgICAgICByb3V0ZXI6IHsKICAgICAgICAgICAgbmFtZTogIm1hbmhhdHRhbiIsCiAgICAgICAgICAgIGFyZ3M6IHsKICAgICAgICAgICAgICBwYWRkaW5nOiAxCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBjb25uZWN0b3I6IHsKICAgICAgICAgICAgbmFtZTogInJvdW5kZWQiLAogICAgICAgICAgICBhcmdzOiB7CiAgICAgICAgICAgICAgcmFkaXVzOiA4CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBhbmNob3I6ICJjZW50ZXIiLAogICAgICAgICAgY29ubmVjdGlvblBvaW50OiAiYW5jaG9yIiwKICAgICAgICAgIGFsbG93Qmxhbms6IGZhbHNlLAogICAgICAgICAgc25hcDogewogICAgICAgICAgICByYWRpdXM6IDIwCiAgICAgICAgICB9LAogICAgICAgICAgY3JlYXRlRWRnZTogZnVuY3Rpb24gY3JlYXRlRWRnZSgpIHsKICAgICAgICAgICAgcmV0dXJuIG5ldyBTaGFwZS5FZGdlKHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgbGluZTogewogICAgICAgICAgICAgICAgICAvLyBzdHJva2U6IHsKICAgICAgICAgICAgICAgICAgLy8gICB0eXBlOiAibGluZWFyR3JhZGllbnQiLAogICAgICAgICAgICAgICAgICAvLyAgIHN0b3BzOiBbCiAgICAgICAgICAgICAgICAgIC8vICAgICB7IG9mZnNldDogIjAlIiwgY29sb3I6ICIjY2NjIiB9LAogICAgICAgICAgICAgICAgICAvLyAgICAgeyBvZmZzZXQ6ICI1MCUiLCBjb2xvcjogIiM3M2QxM2QiIH0sCiAgICAgICAgICAgICAgICAgIC8vICAgICB7IG9mZnNldDogIjEwMCUiLCBjb2xvcjogIiNjY2MiIH0sCiAgICAgICAgICAgICAgICAgIC8vICAgXSwKICAgICAgICAgICAgICAgICAgLy8gfSwKICAgICAgICAgICAgICAgICAgc3Ryb2tlOiAiI2IzYjNiMyIsCiAgICAgICAgICAgICAgICAgIHN0cm9rZVdpZHRoOiAyLAogICAgICAgICAgICAgICAgICB0YXJnZXRNYXJrZXI6IHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAiYmxvY2siLAogICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2LAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogOCwKICAgICAgICAgICAgICAgICAgICAvLyBmaWxsOiAiI2NjYyIsIC8vIOS9v+eUqOiHquWumuS5ieWhq+WFheiJsgogICAgICAgICAgICAgICAgICAgIHN0cm9rZTogIiNiM2IzYjMiIC8vIOS9v+eUqOiHquWumuS5iei+ueahhuiJsgoKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgdHlwZTogIkVkZ2UiLAogICAgICAgICAgICAgICAgaW5zaWRlOiAwLjUsCiAgICAgICAgICAgICAgICBvdXRzaWRlOiAwLjUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHpJbmRleDogMAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0sCiAgICAgICAgICB2YWxpZGF0ZUNvbm5lY3Rpb246IGZ1bmN0aW9uIHZhbGlkYXRlQ29ubmVjdGlvbihfcmVmKSB7CiAgICAgICAgICAgIHZhciB0YXJnZXRNYWduZXQgPSBfcmVmLnRhcmdldE1hZ25ldDsKICAgICAgICAgICAgcmV0dXJuICEhdGFyZ2V0TWFnbmV0OwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgaGlnaGxpZ2h0aW5nOiB7CiAgICAgICAgICBtYWduZXRBZHNvcmJlZDogewogICAgICAgICAgICBuYW1lOiAic3Ryb2tlIiwKICAgICAgICAgICAgYXJnczogewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBmaWxsOiAiIzVGOTVGRiIsCiAgICAgICAgICAgICAgICBzdHJva2U6ICIjNUY5NUZGIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgcmVzaXppbmc6IHsKICAgICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICB9CiAgICAgIH0sIF9kZWZpbmVQcm9wZXJ0eShfR3JhcGgsICJzZWxlY3RpbmciLCB7CiAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICBydWJiZXJiYW5kOiB0cnVlLAogICAgICAgIHNob3dOb2RlU2VsZWN0aW9uQm94OiB0cnVlCiAgICAgIH0pLCBfZGVmaW5lUHJvcGVydHkoX0dyYXBoLCAia2V5Ym9hcmQiLCB0cnVlKSwgX2RlZmluZVByb3BlcnR5KF9HcmFwaCwgImNsaXBib2FyZCIsIHRydWUpLCBfR3JhcGgpKTsKICAgICAgdGhpcy5JTklUX0dSQVBIKGN1cl9ncmFwaCk7CiAgICB9LAogICAgLy8g5Yid5aeL5YyW55S75biD5L6n6L655qCPCiAgICBpbml0U3RlbmNpbDogZnVuY3Rpb24gaW5pdFN0ZW5jaWwoKSB7CiAgICAgIHRoaXMuc3RlbmNpbCA9IG5ldyBTdGVuY2lsKHsKICAgICAgICB0aXRsZTogIkNvbXBvbmVudHMiLAogICAgICAgIHRhcmdldDogdGhpcy5ncmFwaCwKICAgICAgICAvL2NvbGxhcHNhYmxlOiB0cnVlLAogICAgICAgIHN0ZW5jaWxHcmFwaFdpZHRoOiAyMDAsCiAgICAgICAgc3RlbmNpbEdyYXBoSGVpZ2h0OiAxODAsCiAgICAgICAgZ3JvdXBzOiBbewogICAgICAgICAgbmFtZTogIkNvbXBvbmVudHMiCiAgICAgICAgfV0KICAgICAgfSk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJsZWZ0IikuYXBwZW5kQ2hpbGQodGhpcy5zdGVuY2lsLmNvbnRhaW5lcik7CiAgICAgIHZhciBzdGFrZSA9IG5ldyBSZWN0KHsKICAgICAgICB3aWR0aDogNzAsCiAgICAgICAgaGVpZ2h0OiA0MCwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICAvL+S4muWKoeaVsOaNrgogICAgICAgICAgbm9kZURhdGE6IHsKICAgICAgICAgICAgc3Rha2VEYXRhOiB7CiAgICAgICAgICAgICAgcmV3YXJkUG9saWN5RnJvbTogIiIsCiAgICAgICAgICAgICAgc3Rha2VBbW91bnQ6IFt7CiAgICAgICAgICAgICAgICBuYW1lOiAiVGVhbSIsCiAgICAgICAgICAgICAgICBwcm9wOiAwLAogICAgICAgICAgICAgICAgY2xhc3M6ICJ0ZWFtLXNsaWRlciIKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBuYW1lOiAiSW52ZXN0b3IiLAogICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgIGNsYXNzOiAiaW52ZXN0b3Itc2xpZGVyIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJBZHZpc29yIiwKICAgICAgICAgICAgICAgIHByb3A6IDAsCiAgICAgICAgICAgICAgICBjbGFzczogImFkdmlzb3Itc2xpZGVyIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJGb3VuZGF0aW9uIiwKICAgICAgICAgICAgICAgIHByb3A6IDAsCiAgICAgICAgICAgICAgICBjbGFzczogImZvdW5kYXRpb24tc2xpZGVyIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJDb21tdW5pdHkiLAogICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgIGNsYXNzOiAiY29tbXVuaXR5LXNsaWRlciIKICAgICAgICAgICAgICB9XQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgdHlwZTogIlN0YWtlIgogICAgICAgIH0sCiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHJlY3Q6IHsKICAgICAgICAgICAgZmlsbDogInJnYigxNTYsMTkyLDIzMjcpIiwKICAgICAgICAgICAgc3Ryb2tlOiAiI0U2QTIzQyIsCiAgICAgICAgICAgIHN0cm9rZVdpZHRoOiAwCiAgICAgICAgICB9LAogICAgICAgICAgYm9keTogewogICAgICAgICAgICByeDogMTUsCiAgICAgICAgICAgIHJ5OiAxNQogICAgICAgICAgfSwKICAgICAgICAgIHRleHQ6IHsKICAgICAgICAgICAgdGV4dDogIlN0YWtlIiwKICAgICAgICAgICAgZmlsbDogIiNmZmYiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBwb3J0czogUG9ydHNDb25maWcKICAgICAgfSk7CiAgICAgIHZhciB1blN0YWtlID0gbmV3IFJlY3QoewogICAgICAgIHdpZHRoOiA3MCwKICAgICAgICBoZWlnaHQ6IDQwLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIC8v5Lia5Yqh5pWw5o2uCiAgICAgICAgICBub2RlRGF0YTogewogICAgICAgICAgICB1bnN0YWtlRGF0YTogewogICAgICAgICAgICAgIGNvb2xEb3duVGltZTogMCwKICAgICAgICAgICAgICB1bnN0YWtlQW1vdW50OiBbewogICAgICAgICAgICAgICAgbmFtZTogIlRlYW0iLAogICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgIGNsYXNzOiAidGVhbS1zbGlkZXIiCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgbmFtZTogIkludmVzdG9yIiwKICAgICAgICAgICAgICAgIHByb3A6IDAsCiAgICAgICAgICAgICAgICBjbGFzczogImludmVzdG9yLXNsaWRlciIKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBuYW1lOiAiQWR2aXNvciIsCiAgICAgICAgICAgICAgICBwcm9wOiAwLAogICAgICAgICAgICAgICAgY2xhc3M6ICJhZHZpc29yLXNsaWRlciIKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBuYW1lOiAiRm91bmRhdGlvbiIsCiAgICAgICAgICAgICAgICBwcm9wOiAwLAogICAgICAgICAgICAgICAgY2xhc3M6ICJmb3VuZGF0aW9uLXNsaWRlciIKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBuYW1lOiAiQ29tbXVuaXR5IiwKICAgICAgICAgICAgICAgIHByb3A6IDAsCiAgICAgICAgICAgICAgICBjbGFzczogImNvbW11bml0eS1zbGlkZXIiCiAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHR5cGU6ICJVbnN0YWtlIgogICAgICAgIH0sCiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHJlY3Q6IHsKICAgICAgICAgICAgZmlsbDogInJnYigxNjQsMjA1LDIzMSkiLAogICAgICAgICAgICBzdHJva2U6ICIjNjdDMjNBIiwKICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IDAKICAgICAgICAgIH0sCiAgICAgICAgICB0ZXh0OiB7CiAgICAgICAgICAgIHRleHQ6ICJVbnN0YWtlIiwKICAgICAgICAgICAgZmlsbDogIiNmZmYiCiAgICAgICAgICB9LAogICAgICAgICAgYm9keTogewogICAgICAgICAgICByeDogMTUsCiAgICAgICAgICAgIHJ5OiAxNQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgcG9ydHM6IFBvcnRzQ29uZmlnCiAgICAgIH0pOwogICAgICB2YXIgdG9rZW4gPSBuZXcgQ2lyY2xlKHsKICAgICAgICB3aWR0aDogNjAsCiAgICAgICAgaGVpZ2h0OiA2MCwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICAvL+S4muWKoeaVsOaNrgogICAgICAgICAgbm9kZURhdGE6IHsKICAgICAgICAgICAgdG9rZW5EYXRhOiB7CiAgICAgICAgICAgICAgdG90YWxTdXBwbHk6IDAsCiAgICAgICAgICAgICAgYWxsb2NhdGlvbnM6IFt7CiAgICAgICAgICAgICAgICBuYW1lOiAiVGVhbSIsCiAgICAgICAgICAgICAgICBwcm9wOiAwLAogICAgICAgICAgICAgICAgY2xhc3M6ICJ0ZWFtLXNsaWRlciIKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBuYW1lOiAiSW52ZXN0b3IiLAogICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgIGNsYXNzOiAiaW52ZXN0b3Itc2xpZGVyIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJBZHZpc29yIiwKICAgICAgICAgICAgICAgIHByb3A6IDAsCiAgICAgICAgICAgICAgICBjbGFzczogImFkdmlzb3Itc2xpZGVyIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJGb3VuZGF0aW9uIiwKICAgICAgICAgICAgICAgIHByb3A6IDAsCiAgICAgICAgICAgICAgICBjbGFzczogImZvdW5kYXRpb24tc2xpZGVyIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJDb21tdW5pdHkiLAogICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgIGNsYXNzOiAiY29tbXVuaXR5LXNsaWRlciIKICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICBjb21tdW5pdHk6IHsKICAgICAgICAgICAgICAgIGFsbG9jYXRpb25zOiBbewogICAgICAgICAgICAgICAgICBuYW1lOiAiQWlyZHJvcCIsCiAgICAgICAgICAgICAgICAgIHByb3A6IDAsCiAgICAgICAgICAgICAgICAgIGNsYXNzOiAiYWlyZHJvcC10dXJudGFibGUiCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJTdGFraW5nIiwKICAgICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgICAgY2xhc3M6ICJzdGFraW5nLXR1cm50YWJsZSIKICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgc3Rha2luZ0xpZmV0aW1lOiAwLAogICAgICAgICAgICAgICAgc3Rha2luZ1Jld2FyZFJlZnJlc2g6IDAsCiAgICAgICAgICAgICAgICBzdGFraW5nUmV3YXJkRGVjcmVhc2VGYWN0b3I6IDAKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB0eXBlOiAiVG9rZW4iCiAgICAgICAgfSwKICAgICAgICBhdHRyczogewogICAgICAgICAgY2lyY2xlOiB7CiAgICAgICAgICAgIGZpbGw6ICJyZ2IoMTgzLDE5MiwyMjgpIiwKICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IDAsCiAgICAgICAgICAgIHN0cm9rZTogIiM0MDlFRkYiCiAgICAgICAgICB9LAogICAgICAgICAgdGV4dDogewogICAgICAgICAgICB0ZXh0OiAiVG9rZW4iLAogICAgICAgICAgICBmaWxsOiAiI2ZmZiIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHBvcnRzOiBQb3J0c0NvbmZpZwogICAgICB9KTsKICAgICAgdmFyIHZlc3QgPSBuZXcgUmVjdCh7CiAgICAgICAgd2lkdGg6IDcwLAogICAgICAgIGhlaWdodDogNDAsCiAgICAgICAgZGF0YTogewogICAgICAgICAgLy/kuJrliqHmlbDmja4KICAgICAgICAgIG5vZGVEYXRhOiB7CiAgICAgICAgICAgIHZlc3REYXRhOiB7CiAgICAgICAgICAgICAgdmVzdEFtb3VudDogW3sKICAgICAgICAgICAgICAgIG5hbWU6ICJUZWFtIiwKICAgICAgICAgICAgICAgIHByb3A6IDAsCiAgICAgICAgICAgICAgICBjbGFzczogInRlYW0tc2xpZGVyIiwKICAgICAgICAgICAgICAgIGxvY2tVcFRpbWU6IDAsCiAgICAgICAgICAgICAgICByZWxlYXNlUGVyaW9kOiAwLAogICAgICAgICAgICAgICAgY2xpZmY6IDAKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBuYW1lOiAiSW52ZXN0b3IiLAogICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgIGNsYXNzOiAiaW52ZXN0b3Itc2xpZGVyIiwKICAgICAgICAgICAgICAgIGxvY2tVcFRpbWU6IDAsCiAgICAgICAgICAgICAgICByZWxlYXNlUGVyaW9kOiAwLAogICAgICAgICAgICAgICAgY2xpZmY6IDAKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBuYW1lOiAiQWR2aXNvciIsCiAgICAgICAgICAgICAgICBwcm9wOiAwLAogICAgICAgICAgICAgICAgY2xhc3M6ICJhZHZpc29yLXNsaWRlciIsCiAgICAgICAgICAgICAgICBsb2NrVXBUaW1lOiAwLAogICAgICAgICAgICAgICAgcmVsZWFzZVBlcmlvZDogMCwKICAgICAgICAgICAgICAgIGNsaWZmOiAwCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgbmFtZTogIkZvdW5kYXRpb24iLAogICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgIGNsYXNzOiAiZm91bmRhdGlvbi1zbGlkZXIiLAogICAgICAgICAgICAgICAgbG9ja1VwVGltZTogMCwKICAgICAgICAgICAgICAgIHJlbGVhc2VQZXJpb2Q6IDAsCiAgICAgICAgICAgICAgICBjbGlmZjogMAogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJDb21tdW5pdHkiLAogICAgICAgICAgICAgICAgcHJvcDogMCwKICAgICAgICAgICAgICAgIGNsYXNzOiAiY29tbXVuaXR5LXNsaWRlciIsCiAgICAgICAgICAgICAgICBsb2NrVXBUaW1lOiAwLAogICAgICAgICAgICAgICAgcmVsZWFzZVBlcmlvZDogMCwKICAgICAgICAgICAgICAgIGNsaWZmOiAwCiAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHR5cGU6ICJWZXN0IgogICAgICAgIH0sCiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIGJvZHk6IHsKICAgICAgICAgICAgcng6IDE1LAogICAgICAgICAgICByeTogMTUKICAgICAgICAgIH0sCiAgICAgICAgICByZWN0OiB7CiAgICAgICAgICAgIGZpbGw6ICJyZ2IoMjA1LDE0OSwxODcpIiwKICAgICAgICAgICAgc3Ryb2tlOiAiI0Y1NkM2QyIsCiAgICAgICAgICAgIC8vIHN0cm9rZTogewogICAgICAgICAgICAvLyAgIHR5cGU6ICJsaW5lYXJHcmFkaWVudCIsCiAgICAgICAgICAgIC8vICAgc3RvcHM6IFsKICAgICAgICAgICAgLy8gICAgIHsgb2Zmc2V0OiAiMCUiLCBjb2xvcjogIiNjY2MiIH0sCiAgICAgICAgICAgIC8vICAgICB7IG9mZnNldDogIjUwJSIsIGNvbG9yOiAiIzczZDEzZCIgfSwKICAgICAgICAgICAgLy8gICAgIHsgb2Zmc2V0OiAiMTAwJSIsIGNvbG9yOiAiI2NjYyIgfSwKICAgICAgICAgICAgLy8gICBdLAogICAgICAgICAgICAvLyB9LAogICAgICAgICAgICBzdHJva2VXaWR0aDogMAogICAgICAgICAgfSwKICAgICAgICAgIHRleHQ6IHsKICAgICAgICAgICAgdGV4dDogIlZlc3QiLAogICAgICAgICAgICBmaWxsOiAiI2ZmZiIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHBvcnRzOiBQb3J0c0NvbmZpZwogICAgICB9KTsKICAgICAgdGhpcy5zdGVuY2lsLmxvYWQoW3Rva2VuLmNsb25lKCksIHZlc3QuY2xvbmUoKSwgc3Rha2UuY2xvbmUoKSwgdW5TdGFrZS5jbG9uZSgpXSwgIkNvbXBvbmVudHMiKTsKICAgIH0sCiAgICAvL+WIneWni+WMluW/q+aNt+mUrgogICAgaW5pdFNob3J0Y3V0a2V5OiBmdW5jdGlvbiBpbml0U2hvcnRjdXRrZXkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvL+W/q+aNt+S6i+S7tgogICAgICB0aGlzLmdyYXBoLmJpbmRLZXkoWyJtZXRhK2MiLCAiY3RybCtjIl0sIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgY2VsbHMgPSBfdGhpcy5ncmFwaC5nZXRTZWxlY3RlZENlbGxzKCk7CgogICAgICAgIGlmIChjZWxscy5sZW5ndGgpIHsKICAgICAgICAgIF90aGlzLmdyYXBoLmNvcHkoY2VsbHMpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9KTsKICAgICAgdGhpcy5ncmFwaC5iaW5kS2V5KFsibWV0YSt4IiwgImN0cmwreCJdLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGNlbGxzID0gX3RoaXMuZ3JhcGguZ2V0U2VsZWN0ZWRDZWxscygpOwoKICAgICAgICBpZiAoY2VsbHMubGVuZ3RoKSB7CiAgICAgICAgICBfdGhpcy5ncmFwaC5jdXQoY2VsbHMpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9KTsKICAgICAgdGhpcy5ncmFwaC5iaW5kS2V5KFsibWV0YSt2IiwgImN0cmwrdiJdLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKCFfdGhpcy5ncmFwaC5pc0NsaXBib2FyZEVtcHR5KCkpIHsKICAgICAgICAgIHZhciBjZWxscyA9IF90aGlzLmdyYXBoLnBhc3RlKHsKICAgICAgICAgICAgb2Zmc2V0OiAzMgogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXMuZ3JhcGguY2xlYW5TZWxlY3Rpb24oKTsKCiAgICAgICAgICBfdGhpcy5ncmFwaC5zZWxlY3QoY2VsbHMpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9KTsgLy91bmRvIHJlZG8KCiAgICAgIHRoaXMuZ3JhcGguYmluZEtleShbIm1ldGEreiIsICJjdHJsK3oiXSwgZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChfdGhpcy5ncmFwaC5oaXN0b3J5LmNhblVuZG8oKSkgewogICAgICAgICAgX3RoaXMuZ3JhcGguaGlzdG9yeS51bmRvKCk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0pOwogICAgICB0aGlzLmdyYXBoLmJpbmRLZXkoWyJtZXRhK3NoaWZ0K3oiLCAiY3RybCtzaGlmdCt6Il0sIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoX3RoaXMuZ3JhcGguaGlzdG9yeS5jYW5SZWRvKCkpIHsKICAgICAgICAgIF90aGlzLmdyYXBoLmhpc3RvcnkucmVkbygpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9KTsgLy8gc2VsZWN0IGFsbAoKICAgICAgdGhpcy5ncmFwaC5iaW5kS2V5KFsibWV0YSthIiwgImN0cmwrYSJdLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIG5vZGVzID0gX3RoaXMuZ3JhcGguZ2V0Tm9kZXMoKTsKCiAgICAgICAgaWYgKG5vZGVzKSB7CiAgICAgICAgICBfdGhpcy5ncmFwaC5zZWxlY3Qobm9kZXMpOwogICAgICAgIH0KICAgICAgfSk7IC8vIHpvb20KCiAgICAgIHRoaXMuZ3JhcGguYmluZEtleShbImN0cmwrMSIsICJtZXRhKzEiXSwgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB6b29tID0gX3RoaXMuZ3JhcGguem9vbSgpOwoKICAgICAgICBpZiAoem9vbSA8IDEuNSkgewogICAgICAgICAgX3RoaXMuZ3JhcGguem9vbSgwLjEpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuZ3JhcGguYmluZEtleShbImN0cmwrMiIsICJtZXRhKzIiXSwgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB6b29tID0gX3RoaXMuZ3JhcGguem9vbSgpOwoKICAgICAgICBpZiAoem9vbSA+IDAuNSkgewogICAgICAgICAgX3RoaXMuZ3JhcGguem9vbSgtMC4xKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGluaXRXYXRjaEV2ZW50OiBmdW5jdGlvbiBpbml0V2F0Y2hFdmVudCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvLyDoioLngrnnvJbovpEKICAgICAgdGhpcy5ncmFwaC5vbigiY2VsbDpjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChfcmVmMikgewogICAgICAgIHZhciBlID0gX3JlZjIuZSwKICAgICAgICAgICAgeCA9IF9yZWYyLngsCiAgICAgICAgICAgIHkgPSBfcmVmMi55LAogICAgICAgICAgICBjZWxsID0gX3JlZjIuY2VsbCwKICAgICAgICAgICAgdmlldyA9IF9yZWYyLnZpZXc7CiAgICAgICAgLy8gVE9ETyAoWHVmZWkpIOmcgOimgemHjeaWsOiuvuiuoSBUb2tlbiDkuI3og73ooqvnvJbovpHnmoTpgLvovpEgVG9rZW4udHlwZSA9PSAyIOeahOS4jeiDveiiq+e8lui+ke+8nwogICAgICAgIC8vIGlmICgKICAgICAgICAvLyAgIGNlbGwuZ2V0RGF0YSgpLnR5cGUgPT0gIlRva2VuIiAmJgogICAgICAgIC8vICAgdGhpcy5ncmFwaC5nZXRQcmVkZWNlc3NvcnMoY2VsbCkubGVuZ3RoICE9IDAKICAgICAgICAvLyApIHsKICAgICAgICAvLyAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgIC8vICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgLy8gICAgIG1lc3NhZ2U6ICJUaGUgY3VycmVudCBub2RlIGNhbm5vdCBiZSBlZGl0ZWQhIiwKICAgICAgICAvLyAgICAgdHlwZTogIndhcm5pbmciLAogICAgICAgIC8vICAgfSk7CiAgICAgICAgLy8gICByZXR1cm47CiAgICAgICAgLy8gfQogICAgICAgIF90aGlzMi5ub2RlRWRpdFNob3cgPSBmYWxzZTsKCiAgICAgICAgX3RoaXMyLlNFVF9FRElUX0NFTExTKGNlbGwpOwogICAgICB9KTsgLy8g5rOo5YaM55uR5ZCs5LqL5Lu277yM5b2T5paw5aKe6IqC54K55oiW6L656LCD55So77yM5a6e5pe25a2Y5YKoCgogICAgICB0aGlzLmdyYXBoLm9uKCJub2RlOmFkZGVkIiwgZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgICAgdmFyIGNlbGwgPSBfcmVmMy5jZWxsLAogICAgICAgICAgICBvcHRpb25zID0gX3JlZjMub3B0aW9uczsKCiAgICAgICAgX3RoaXMyLlNUT1JBR0VfR1JBUEgoKTsKICAgICAgfSk7CiAgICAgIHRoaXMuZ3JhcGgub24oImNlbGw6YWRkZWQiLCBmdW5jdGlvbiAoX3JlZjQpIHsKICAgICAgICB2YXIgY2VsbCA9IF9yZWY0LmNlbGwsCiAgICAgICAgICAgIG9wdGlvbnMgPSBfcmVmNC5vcHRpb25zOwoKICAgICAgICBfdGhpczIuU1RPUkFHRV9HUkFQSCgpOwogICAgICB9KTsKICAgICAgdGhpcy5ncmFwaC5vbigiY2VsbDpjaGFuZ2VkIiwgZnVuY3Rpb24gKF9yZWY1KSB7CiAgICAgICAgdmFyIGNlbGwgPSBfcmVmNS5jZWxsLAogICAgICAgICAgICBvcHRpb25zID0gX3JlZjUub3B0aW9uczsKCiAgICAgICAgX3RoaXMyLlNUT1JBR0VfR1JBUEgoKTsKICAgICAgfSk7CiAgICAgIHRoaXMuZ3JhcGgub24oImNlbGw6cmVtb3ZlZCIsIGZ1bmN0aW9uIChfcmVmNikgewogICAgICAgIHZhciBjZWxsID0gX3JlZjYuY2VsbCwKICAgICAgICAgICAgb3B0aW9ucyA9IF9yZWY2Lm9wdGlvbnM7CgogICAgICAgIF90aGlzMi5TVE9SQUdFX0dSQVBIKCk7CiAgICAgIH0pOyAvLyDmjqfliLbov57mjqXmoanmmL7npLov6ZqQ6JePCgogICAgICB2YXIgc2hvd1BvcnRzID0gZnVuY3Rpb24gc2hvd1BvcnRzKHBvcnRzLCBzaG93KSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHBvcnRzLmxlbmd0aDsgaSA8IGxlbjsgaSA9IGkgKyAxKSB7CiAgICAgICAgICBwb3J0c1tpXS5zdHlsZS52aXNpYmlsaXR5ID0gc2hvdyA/ICJ2aXNpYmxlIiA6ICJoaWRkZW4iOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHRoaXMuZ3JhcGgub24oIm5vZGU6bW91c2VlbnRlciIsIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNhbnZhcy1tYWluIik7CiAgICAgICAgdmFyIHBvcnRzID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoIi54Ni1wb3J0LWJvZHkiKTsKICAgICAgICBzaG93UG9ydHMocG9ydHMsIHRydWUpOwogICAgICB9KTsKICAgICAgdGhpcy5ncmFwaC5vbigibm9kZTptb3VzZWxlYXZlIiwgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY2FudmFzLW1haW4iKTsKICAgICAgICB2YXIgcG9ydHMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgiLng2LXBvcnQtYm9keSIpOwogICAgICAgIHNob3dQb3J0cyhwb3J0cywgZmFsc2UpOwogICAgICB9KTsKICAgICAgdGhpcy5ncmFwaC5vbigiY2VsbDpkYmxjbGljayIsIGZ1bmN0aW9uIChfcmVmNykgewogICAgICAgIHZhciBjZWxsID0gX3JlZjcuY2VsbCwKICAgICAgICAgICAgZSA9IF9yZWY3LmU7CiAgICAgICAgdmFyIG5hbWUgPSBjZWxsLmlzRWRnZSgpID8gImVkZ2UtZWRpdG9yIiA6ICJub2RlLWVkaXRvciI7CiAgICAgICAgY2VsbC5yZW1vdmVUb29sKG5hbWUpOwogICAgICAgIGNlbGwuYWRkVG9vbHMoW3sKICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICBhcmdzOiB7CiAgICAgICAgICAgIGV2ZW50OiBlCiAgICAgICAgICB9CiAgICAgICAgfV0pOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDoioLngrnnvJbovpHpnaLmnb8KICAgIGNsb3NlTm9kZUVkaXQ6IGZ1bmN0aW9uIGNsb3NlTm9kZUVkaXQoKSB7CiAgICAgIHRoaXMubm9kZUVkaXRTaG93ID0gdHJ1ZTsKICAgIH0sCiAgICBjbG9zZU1pbnRFZGl0OiBmdW5jdGlvbiBjbG9zZU1pbnRFZGl0KCkgewogICAgICB0aGlzLmNlbnRlckRpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgIH0sCiAgICBsb2FkR3JhcGhGcm9tQmFjazogZnVuY3Rpb24gbG9hZEdyYXBoRnJvbUJhY2soKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5Lm1ldGFkYXRhSGFzaCA9PSBudWxsKSB7CiAgICAgICAgLy/lr7zlhaXlt7LmnInoioLngrnkv6Hmga8KICAgICAgICB0aGlzLkxPQURfR1JBUEgoKTsgLy/ov5vooYzkuIDmrKHogZrnhKYKCiAgICAgICAgdGhpcy5QT1NJVElPTklOR19HUkFQSCgpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29ubmVjdE1ldGFtYXNrKHRoaXMud2ViM1Byb3ZpZGVyKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMpIHsKICAgICAgICAgIF90aGlzMy5TRVRfVVNFUihyZXNwb25zZS5hY2NvdW50WzBdKTsKCiAgICAgICAgICB2YXIgcmVxID0gewogICAgICAgICAgICBhY2NvdW50QWRkcjogX3RoaXMzLnVzZXIsCiAgICAgICAgICAgIG1ldGFkYXRhSGFzaDogX3RoaXMzLiRyb3V0ZS5xdWVyeS5tZXRhZGF0YUhhc2gKICAgICAgICAgIH07CiAgICAgICAgICBxdWVyeW1vZGVsKHJlcSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIGlmIChyZXMubWVzc2FnZV9jb2RlID09IF90aGlzMy5zdGF0dXNDb2RlLlNVQ0NFU1NFRCkgewogICAgICAgICAgICAgIHZhciBtb2RlbERhdGEgPSBKU09OLnBhcnNlKHJlcy5kYXRhLm1vZGVsRGF0YSk7CiAgICAgICAgICAgICAgdmFyIHJlc3VsdHMgPSBKU09OLnBhcnNlKHJlcy5kYXRhLnJlc3VsdHMpOwoKICAgICAgICAgICAgICBfdGhpczMuTU9ESUZZX0hJU1RPUllfU0lNVUxBVEVfREFUQShyZXN1bHRzKTsKCiAgICAgICAgICAgICAgdmFyIHBhcmFtcyA9IEpTT04ucGFyc2UocmVzLmRhdGEucGFyYW1zKTsKCiAgICAgICAgICAgICAgX3RoaXMzLk1PRElGWV9DT05GSUdEQVRBKFtwYXJhbXMuY29uZmlnRGF0YS5zaW11bGF0aW9uRGF5cywgcGFyYW1zLmNvbmZpZ0RhdGEuc2ltdWxhdGlvblNsb3RdKTsKCiAgICAgICAgICAgICAgc2V0U3RvcmUoImdyYXBoIiwgbW9kZWxEYXRhKTsgLy/lr7zlhaXlt7LmnInoioLngrnkv6Hmga8KCiAgICAgICAgICAgICAgX3RoaXMzLkxPQURfR1JBUEgoKTsgLy/ov5vooYzkuIDmrKHogZrnhKYKCgogICAgICAgICAgICAgIF90aGlzMy5QT1NJVElPTklOR19HUkFQSCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIF90aGlzMy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgICAgIHRpdGxlOiAiRXJyb3IiLAogICAgICAgICAgICAgICAgbWVzc2FnZTogIklkZW50aXR5IHZlcmlmaWNhdGlvbiBmYWlsZWQhIiwKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAiYm90dG9tLXJpZ2h0IgogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBfdGhpczMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgIHBhdGg6ICIvY3JlYXRlIgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMzLiRub3RpZnkuZXJyb3IoewogICAgICAgICAgICB0aXRsZTogIkVycm9yIiwKICAgICAgICAgICAgbWVzc2FnZTogIklkZW50aXR5IHZlcmlmaWNhdGlvbiBmYWlsZWQhIiwKICAgICAgICAgICAgcG9zaXRpb246ICJib3R0b20tcmlnaHQiCiAgICAgICAgICB9KTsKCiAgICAgICAgICBfdGhpczMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgcGF0aDogIi9jcmVhdGUiCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0pLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyDliJ3lp4vljJbpnaLmnb8KICAgIHRoaXMuaW5pdEdyYXBnKCk7IC8vIOWIneWni+WMlumdouadv+ebuOWFs+W/q+aNt+mUrgoKICAgIHRoaXMuaW5pdFNob3J0Y3V0a2V5KCk7IC8vIOWIneWni+WMluW3puS+p+aOp+S7tgoKICAgIHRoaXMuaW5pdFN0ZW5jaWwoKTsgLy/liKTmlq3mmK/lkKbmmK/nlLHor6bmg4XpobXot7Povazov4fmnaXnmoQKCiAgICB0aGlzLmxvYWRHcmFwaEZyb21CYWNrKCk7IC8v5Yid5aeL5YyW55u45YWz55uR5ZCs5LqL5Lu2CgogICAgdGhpcy5pbml0V2F0Y2hFdmVudCgpOwogICAgdGhpcy5MT0FEX1JVTEVfTElTVFMoKTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbImdyYXBoIiwgInVwbG9hZERpYWxvZyIsICJlZGl0Tm9kZSIsICJzdGF0dXNDb2RlIiwgInVzZXIiLCAiaGlzdG9yeVNpbXVsYXRlRGF0YSJdKSksCiAgd2F0Y2g6IHsvLyB1cGxvYWREaWFsb2codmFsKSB7CiAgICAvLyAgIHRoaXMudXBsb2FkU2hvdyA9IHZhbDsKICAgIC8vIH0sCiAgICAvLyB1cGxvYWRTaG93KHZhbCkgewogICAgLy8gICBpZiAoIXZhbCkgewogICAgLy8gICAgIHRoaXMuQ0xPU0VfVVBMT0FEX0RJQUxPRygpOwogICAgLy8gICB9CiAgICAvLyB9LAogIH0KfTs="},{"version":3,"sources":["Editor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"models\">\n    <div class=\"draw\">\n      <!-- 左侧控件 -->\n      <div class=\"left-container\">\n        <div class=\"left\" id=\"left\"></div>\n\n        <!-- Mint 按钮 -->\n        <el-button\n          type=\"text\"\n          class=\"mint-btn\"\n          @click=\"centerDialogVisible = true\"\n        >\n          Mint\n        </el-button>\n        <el-dialog\n          title=\"Mint New Model\"\n          :visible.sync=\"centerDialogVisible\"\n          width=\"30%\"\n          center\n        >\n          <MintForm :close=\"closeMintEdit\" />\n          <!-- <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"centerDialogVisible = false\">Cancel</el-button>\n            <el-button type=\"primary\" @click=\"centerDialogVisible = false\">Confirm</el-button>\n          </span> -->\n        </el-dialog>\n        <div class=\"rule-list\">\n          <RuleList />\n        </div>\n      </div>\n      <div class=\"draw-main-box\">\n        <!-- 面板中心区域 -->\n        <div class=\"editor-section\">\n          <div id=\"canvas-main\" class=\"canvas-main\"></div>\n        </div>\n      </div>\n      <!-- 工具导航栏 -->\n      <div class=\"tools-navbar\">\n        <div class=\"tools-navbar\" id=\"tools-navbar\">\n          <ToolsNavbar />\n        </div>\n      </div>\n      <!-- 右侧控件 -->\n      <transition name=\"el-fade-in-linear\">\n        <div class=\"right-container\" v-bind:class=\"{ show: nodeEditShow }\">\n          <NodeEdit :closeNodeEdit=\"closeNodeEdit\" />\n        </div>\n      </transition>\n    </div>\n    <!-- 数据可视化面板 -->\n    <div class=\"data-visual-panel\">\n      <el-button class=\"visual-button\" @click=\"visualPanelVisible = true\">\n        Data Visualization\n      </el-button>\n    </div>\n    <el-dialog\n      title=\"Modeling data visualization\"\n      :visible.sync=\"visualPanelVisible\"\n      width=\"60%\"\n    >\n      <VisualPanel />\n    </el-dialog>\n    <!-- 模型导入面板 -->\n    <!-- <el-dialog title=\"Model upload\" :visible.sync=\"uploadShow\" width=\"60%\">\n      <ModelUpload />\n    </el-dialog> -->\n  </div>\n</template>\n\n<script>\nimport VisualPanel from \"./VisualPanel\";\nimport ModelUpload from \"./ModelUpload\";\nimport NodeEdit from \"./NodeEdit\";\nimport ToolsNavbar from \"./ToolsNavbar\";\nimport MintForm from \"../Template/MintForm\";\nimport RuleList from \"../create/RuleList\";\nimport { Addon, Graph, Shape } from \"@antv/x6\";\nconst { Stencil } = Addon;\nconst { Rect, Circle } = Shape;\n// 导入链接桩配置\nimport { PortsConfig } from \"../../graph/portsConfig\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { querymodel } from \"../../api/index\";\nimport { setStore } from \"../../utils/storage\";\nimport { connectMetamask } from \"../../api/web3/contracts\";\n\nconst antlr4 = require(\"antlr4\");\nconst InputStream = antlr4.InputStream;\nconst CommonTokenStream = antlr4.CommonTokenStream;\nconst GrammarParser = require(\"../../parser/PropertyParser\").PropertyParser;\nconst GrammarLexer = require(\"../../parser/PropertyLexer\").PropertyLexer;\n\nexport default {\n  data() {\n    return {\n      loaded: false,\n      nodeEditShow: true,\n      visualPanelVisible: false,\n      // uploadShow: false,\n      centerDialogVisible: false,\n    };\n  },\n  components: {\n    VisualPanel,\n    ModelUpload,\n    NodeEdit,\n    ToolsNavbar,\n    MintForm,\n    RuleList,\n  },\n  methods: {\n    ...mapMutations([\n      \"STORAGE_GRAPH\",\n      \"LOAD_GRAPH\",\n      \"POSITIONING_GRAPH\",\n      \"INIT_GRAPH\",\n      \"CLOSE_UPLOAD_DIALOG\",\n      \"SET_EDIT_CELLS\",\n      \"MODIFY_HISTORY_SIMULATE_DATA\",\n      \"MODIFY_CONFIGDATA\",\n      \"SET_USER\",\n      \"LOAD_RULE_LISTS\",\n    ]),\n\n    // 画布初始化\n    initGrapg() {\n      let cur_graph = new Graph({\n        container: document.getElementById(\"canvas-main\"),\n        selecting: true,\n        autoResize: true,\n        history: true,\n        background: {\n          color: \"#fff\",\n        },\n        grid: {\n          size: 30,\n          visible: true,\n        },\n        snapline: {\n          enabled: true,\n          sharp: true,\n        },\n        scroller: {\n          enabled: true,\n          pageVisible: false,\n          pageBreak: false,\n          pannable: true,\n          modifiers: [\"shift\"],\n        },\n        mousewheel: {\n          enabled: true,\n          zoomAtMousePosition: true,\n          modifiers: [\"ctrl\", \"meta\"],\n          minScale: 0.5,\n          maxScale: 3,\n        },\n        connecting: {\n          router: {\n            name: \"manhattan\",\n            args: {\n              padding: 1,\n            },\n          },\n          connector: {\n            name: \"rounded\",\n            args: {\n              radius: 8,\n            },\n          },\n          anchor: \"center\",\n          connectionPoint: \"anchor\",\n          allowBlank: false,\n          snap: {\n            radius: 20,\n          },\n          createEdge() {\n            return new Shape.Edge({\n              attrs: {\n                line: {\n                  // stroke: {\n                  //   type: \"linearGradient\",\n                  //   stops: [\n                  //     { offset: \"0%\", color: \"#ccc\" },\n                  //     { offset: \"50%\", color: \"#73d13d\" },\n                  //     { offset: \"100%\", color: \"#ccc\" },\n                  //   ],\n                  // },\n                  stroke: \"#b3b3b3\",\n                  strokeWidth: 2,\n                  targetMarker: {\n                    name: \"block\",\n                    width: 6,\n                    height: 8,\n                    // fill: \"#ccc\", // 使用自定义填充色\n                    stroke: \"#b3b3b3\", // 使用自定义边框色\n                  },\n                },\n              },\n\n              data: {\n                type: \"Edge\",\n                inside: 0.5,\n                outside: 0.5,\n              },\n              zIndex: 0,\n            });\n          },\n          validateConnection({ targetMagnet }) {\n            return !!targetMagnet;\n          },\n        },\n        highlighting: {\n          magnetAdsorbed: {\n            name: \"stroke\",\n            args: {\n              attrs: {\n                fill: \"#5F95FF\",\n                stroke: \"#5F95FF\",\n              },\n            },\n          },\n        },\n        resizing: {\n          enabled: true,\n        },\n        selecting: {\n          enabled: true,\n          rubberband: true,\n          showNodeSelectionBox: true,\n        },\n\n        keyboard: true,\n        clipboard: true,\n      });\n      this.INIT_GRAPH(cur_graph);\n    },\n\n    // 初始化画布侧边栏\n    initStencil() {\n      this.stencil = new Stencil({\n        title: \"Components\",\n        target: this.graph,\n\n        //collapsable: true,\n        stencilGraphWidth: 200,\n        stencilGraphHeight: 180,\n        groups: [\n          {\n            name: \"Components\",\n          },\n        ],\n      });\n\n      document.getElementById(\"left\").appendChild(this.stencil.container);\n      const stake = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            stakeData: {\n              rewardPolicyFrom: \"\",\n              stakeAmount: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n            },\n          },\n          type: \"Stake\",\n        },\n        attrs: {\n          rect: {\n            fill: \"rgb(156,192,2327)\",\n            stroke: \"#E6A23C\",\n            strokeWidth: 0,\n          },\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n          text: { text: \"Stake\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      const unStake = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            unstakeData: {\n              coolDownTime: 0,\n              unstakeAmount: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n            },\n          },\n          type: \"Unstake\",\n        },\n        attrs: {\n          rect: { fill: \"rgb(164,205,231)\", stroke: \"#67C23A\", strokeWidth: 0 },\n          text: { text: \"Unstake\", fill: \"#fff\" },\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n        },\n        ports: PortsConfig,\n      });\n\n      const token = new Circle({\n        width: 60,\n        height: 60,\n        data: {\n          //业务数据\n          nodeData: {\n            tokenData: {\n              totalSupply: 0,\n              allocations: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n              community: {\n                allocations: [\n                  { name: \"Airdrop\", prop: 0, class: \"airdrop-turntable\" },\n                  { name: \"Staking\", prop: 0, class: \"staking-turntable\" },\n                ],\n                stakingLifetime: 0,\n                stakingRewardRefresh: 0,\n                stakingRewardDecreaseFactor: 0,\n              },\n            },\n          },\n          type: \"Token\",\n        },\n        attrs: {\n          circle: {\n            fill: \"rgb(183,192,228)\",\n            strokeWidth: 0,\n            stroke: \"#409EFF\",\n          },\n          text: { text: \"Token\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      const vest = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            vestData: {\n              vestAmount: [\n                {\n                  name: \"Team\",\n                  prop: 0,\n                  class: \"team-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Investor\",\n                  prop: 0,\n                  class: \"investor-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Advisor\",\n                  prop: 0,\n                  class: \"advisor-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Foundation\",\n                  prop: 0,\n                  class: \"foundation-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Community\",\n                  prop: 0,\n                  class: \"community-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n              ],\n            },\n          },\n          type: \"Vest\",\n        },\n        attrs: {\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n          rect: {\n            fill: \"rgb(205,149,187)\",\n            stroke: \"#F56C6C\",\n            // stroke: {\n            //   type: \"linearGradient\",\n            //   stops: [\n            //     { offset: \"0%\", color: \"#ccc\" },\n            //     { offset: \"50%\", color: \"#73d13d\" },\n            //     { offset: \"100%\", color: \"#ccc\" },\n            //   ],\n            // },\n            strokeWidth: 0,\n          },\n          text: { text: \"Vest\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      this.stencil.load(\n        [token.clone(), vest.clone(), stake.clone(), unStake.clone()],\n        \"Components\"\n      );\n    },\n    //初始化快捷键\n    initShortcutkey() {\n      //快捷事件\n      this.graph.bindKey([\"meta+c\", \"ctrl+c\"], () => {\n        const cells = this.graph.getSelectedCells();\n        if (cells.length) {\n          this.graph.copy(cells);\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+x\", \"ctrl+x\"], () => {\n        const cells = this.graph.getSelectedCells();\n        if (cells.length) {\n          this.graph.cut(cells);\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+v\", \"ctrl+v\"], () => {\n        if (!this.graph.isClipboardEmpty()) {\n          const cells = this.graph.paste({ offset: 32 });\n          this.graph.cleanSelection();\n          this.graph.select(cells);\n        }\n        return false;\n      });\n      //undo redo\n      this.graph.bindKey([\"meta+z\", \"ctrl+z\"], () => {\n        if (this.graph.history.canUndo()) {\n          this.graph.history.undo();\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+shift+z\", \"ctrl+shift+z\"], () => {\n        if (this.graph.history.canRedo()) {\n          this.graph.history.redo();\n        }\n        return false;\n      });\n\n      // select all\n      this.graph.bindKey([\"meta+a\", \"ctrl+a\"], () => {\n        const nodes = this.graph.getNodes();\n        if (nodes) {\n          this.graph.select(nodes);\n        }\n      });\n\n      // zoom\n      this.graph.bindKey([\"ctrl+1\", \"meta+1\"], () => {\n        const zoom = this.graph.zoom();\n        if (zoom < 1.5) {\n          this.graph.zoom(0.1);\n        }\n      });\n      this.graph.bindKey([\"ctrl+2\", \"meta+2\"], () => {\n        const zoom = this.graph.zoom();\n        if (zoom > 0.5) {\n          this.graph.zoom(-0.1);\n        }\n      });\n    },\n    initWatchEvent() {\n      // 节点编辑\n      this.graph.on(\"cell:contextmenu\", ({ e, x, y, cell, view }) => {\n        // TODO (Xufei) 需要重新设计 Token 不能被编辑的逻辑 Token.type == 2 的不能被编辑？\n        // if (\n        //   cell.getData().type == \"Token\" &&\n        //   this.graph.getPredecessors(cell).length != 0\n        // ) {\n        //   this.$message({\n        //     showClose: true,\n        //     message: \"The current node cannot be edited!\",\n        //     type: \"warning\",\n        //   });\n        //   return;\n        // }\n        this.nodeEditShow = false;\n        this.SET_EDIT_CELLS(cell);\n      });\n      // 注册监听事件，当新增节点或边调用，实时存储\n      this.graph.on(\"node:added\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n\n      this.graph.on(\"cell:added\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      this.graph.on(\"cell:changed\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      this.graph.on(\"cell:removed\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      // 控制连接桩显示/隐藏\n      const showPorts = (ports, show) => {\n        for (let i = 0, len = ports.length; i < len; i = i + 1) {\n          ports[i].style.visibility = show ? \"visible\" : \"hidden\";\n        }\n      };\n      this.graph.on(\"node:mouseenter\", () => {\n        const container = document.getElementById(\"canvas-main\");\n        const ports = container.querySelectorAll(\".x6-port-body\");\n        showPorts(ports, true);\n      });\n      this.graph.on(\"node:mouseleave\", () => {\n        const container = document.getElementById(\"canvas-main\");\n        const ports = container.querySelectorAll(\".x6-port-body\");\n        showPorts(ports, false);\n      });\n      this.graph.on(\"cell:dblclick\", ({ cell, e }) => {\n        const name = cell.isEdge() ? \"edge-editor\" : \"node-editor\";\n        cell.removeTool(name);\n        cell.addTools([\n          {\n            name,\n            args: {\n              event: e,\n            },\n          },\n        ]);\n      });\n    },\n    // 节点编辑面板\n    closeNodeEdit() {\n      this.nodeEditShow = true;\n    },\n    closeMintEdit() {\n      this.centerDialogVisible = false;\n    },\n    loadGraphFromBack() {\n      if (this.$route.query.metadataHash == null) {\n        //导入已有节点信息\n        this.LOAD_GRAPH();\n        //进行一次聚焦\n        this.POSITIONING_GRAPH();\n        return;\n      }\n\n      connectMetamask(this.web3Provider).then((response) => {\n        if (response.status) {\n          this.SET_USER(response.account[0]);\n\n          const req = {\n            accountAddr: this.user,\n            metadataHash: this.$route.query.metadataHash,\n          };\n          querymodel(req).then((res) => {\n            if (res.message_code == this.statusCode.SUCCESSED) {\n              const modelData = JSON.parse(res.data.modelData);\n              const results = JSON.parse(res.data.results);\n              this.MODIFY_HISTORY_SIMULATE_DATA(results);\n              const params = JSON.parse(res.data.params);\n              this.MODIFY_CONFIGDATA([\n                params.configData.simulationDays,\n                params.configData.simulationSlot,\n              ]);\n              setStore(\"graph\", modelData);\n\n              //导入已有节点信息\n              this.LOAD_GRAPH();\n              //进行一次聚焦\n              this.POSITIONING_GRAPH();\n            } else {\n              this.$notify.error({\n                title: \"Error\",\n                message: \"Identity verification failed!\",\n                position: \"bottom-right\",\n              });\n              this.$router.push({\n                path: \"/create\",\n              });\n            }\n          });\n        } else {\n          this.$notify.error({\n            title: \"Error\",\n            message: \"Identity verification failed!\",\n            position: \"bottom-right\",\n          });\n          this.$router.push({\n            path: \"/create\",\n          });\n        }\n      });\n    },\n  },\n\n  mounted() {\n    // 初始化面板\n    this.initGrapg();\n    // 初始化面板相关快捷键\n    this.initShortcutkey();\n    // 初始化左侧控件\n    this.initStencil();\n\n    //判断是否是由详情页跳转过来的\n    this.loadGraphFromBack();\n    //初始化相关监听事件\n    this.initWatchEvent();\n    this.LOAD_RULE_LISTS();\n    \n  },\n  computed: {\n    ...mapState([\n      \"graph\",\n      \"uploadDialog\",\n      \"editNode\",\n      \"statusCode\",\n      \"user\",\n      \"historySimulateData\",\n    ]),\n  },\n  watch: {\n    // uploadDialog(val) {\n    //   this.uploadShow = val;\n    // },\n    // uploadShow(val) {\n    //   if (!val) {\n    //     this.CLOSE_UPLOAD_DIALOG();\n    //   }\n    // },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.models {\n  .draw {\n    .left-container {\n      width: 200px;\n      .left {\n        position: fixed;\n        top: 120px;\n        width: 200px;\n        height: 220px;\n        left: 60px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n        border-radius: 20px;\n        // border: #e9e9e9 1px solid;\n\n        /deep/ .x6-widget-stencil-content {\n          background-color: #fff;\n        }\n        /deep/ .x6-widget-stencil-group-title {\n          background-color: #fff;\n        }\n        /deep/ .x6-widget-stencil-content {\n          border-radius: inherit;\n        }\n        /deep/.x6-widget-stencil-title {\n          border-radius: 20px;\n        }\n        /deep/ .x6-widget-stencil {\n          border-radius: 20px;\n        }\n      }\n\n      .mint-btn {\n        background-color: #fff !important;\n        border: #858585 !important;\n        color: #616060 !important;\n        position: fixed;\n        top: 450px;\n        width: 200px;\n        height: 40px;\n        left: 60px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8) !important;\n        border-radius: 20px;\n      }\n\n      .rule-list {\n        position: fixed;\n        top: 520px;\n        left: 60px;\n        border-radius: 20px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n      }\n    }\n\n    .draw-main-box {\n      position: fixed;\n      left: 250px;\n      // overflow: scroll;\n      width: calc(100% - 250px);\n      height: 100%;\n      //background: url(\"../../assets/bg.png\");\n\n      .editor-section {\n        display: flex;\n        // overflow: scroll;\n        margin: 40px auto;\n        width: 90%;\n        height: 70%;\n        // border: solid 2px #f4f4f4;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n        border-radius: 30px;\n\n        /deep/ .x6-graph-scroller {\n          border-radius: 30px;\n        }\n\n        /deep/ .x6-graph-scroller-pannable {\n          border-radius: 30px;\n        }\n\n        .canvas-main {\n          flex: 1;\n        }\n      }\n    }\n    .right-container {\n      width: 300px;\n      position: fixed;\n      top: 50px;\n      right: 0px;\n      height: 100%;\n    }\n  }\n  .data-visual-panel {\n    position: fixed;\n    bottom: 20px;\n    left: 20px;\n    .visual-button {\n      // display: flex;\n      // width: 100%;\n      // &:hover {\n      //   cursor: pointer;\n      // }\n      // span {\n      //   margin: auto;\n      //   padding: 0.3em 1em 0.5em;\n      //   background: #409eff;\n      //   color: white;\n\n      //   border-radius: 3px;\n      //   box-shadow: 0 0 0.5em #858585;\n      //   // animation: shake 2s ease 0s infinite;\n      //   // animation-play-state: paused;\n\n      //   // &:hover {\n      //   //   animation-play-state: running;\n      //   // }\n      // }\n\n      background-color: #fff !important;\n      border: #858585 !important;\n      color: #616060 !important;\n      position: fixed;\n      top: 380px;\n      width: 200px;\n      height: 40px;\n      left: 60px;\n      box-shadow: 0 0 6px rgba(180, 180, 180, 0.8) !important;\n      border-radius: 20px;\n    }\n  }\n  .show {\n    visibility: hidden;\n  }\n  .visual-dialog {\n    font-size: 20px;\n  }\n  @keyframes shake {\n    from {\n      transform: rotate(0deg);\n    }\n    4% {\n      transform: rotate(5deg);\n    }\n    12.5% {\n      transform: rotate(-5deg);\n    }\n    21% {\n      transform: rotate(5deg);\n    }\n    29% {\n      transform: rotate(-5deg);\n    }\n    37.5% {\n      transform: rotate(5deg);\n    }\n    46% {\n      transform: rotate(-5deg);\n    }\n    50%,\n    to {\n      transform: rotate(0deg);\n    }\n  }\n}\n</style>"],"sourceRoot":"src/components/create"}]}