{"remainingRequest":"/Users/xufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js!/Users/xufei/Desktop/FlowModel/node_modules/eslint-loader/index.js??ref--13-0!/Users/xufei/Desktop/FlowModel/src/utils/ipfsUtil.js","dependencies":[{"path":"/Users/xufei/Desktop/FlowModel/src/utils/ipfsUtil.js","mtime":1653708835731},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js","mtime":1653708688758},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/eslint-loader/index.js","mtime":1653708690128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3h1ZmVpL0Rlc2t0b3AvRmxvd01vZGVsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKCnZhciBpcGZzQVBJID0gcmVxdWlyZSgiaXBmcy1hcGkiKTsKCnZhciBpcGZzID0gbnVsbDsKdmFyIGlwZnNTZXJ2ZXJJUCA9ICIxMC4xMDAuMTE3LjQxIjsKdmFyIGlwZnNTZXJ2ZXJQb3J0ID0gIjUwMDEiOwpleHBvcnQgZnVuY3Rpb24gc2V0dXBJUEZTKCkgewogIHJldHVybiBfc2V0dXBJUEZTLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9zZXR1cElQRlMoKSB7CiAgX3NldHVwSVBGUyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHZhciBpZDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CgogICAgICAgICAgICBpZiAoIShpcGZzID09IG51bGwpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlwZnMgPSBpcGZzQVBJKHsKICAgICAgICAgICAgICBob3N0OiBpcGZzU2VydmVySVAsCiAgICAgICAgICAgICAgcG9ydDogaXBmc1NlcnZlclBvcnQsCiAgICAgICAgICAgICAgcHJvdG9jb2w6ICJodHRwIgogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBpcGZzLmlkKCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBpZCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJJUEZTIGluc3RhbmNlIGlkIiwgaWQuaWQpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgOV1dKTsKICB9KSk7CiAgcmV0dXJuIF9zZXR1cElQRlMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIHVwbG9hZFRvSVBGUyhfeCkgewogIHJldHVybiBfdXBsb2FkVG9JUEZTLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF91cGxvYWRUb0lQRlMoKSB7CiAgX3VwbG9hZFRvSVBGUyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoZGF0YSkgewogICAgdmFyIHJlczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gaXBmcy5hZGQoQnVmZmVyLmZyb20oZGF0YSkpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ1cGxvYWQgdG8gaXBmcyByZXM6IiwgcmVzWzBdLmhhc2gpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzWzBdLmhhc2gpOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA4OwogICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsICItMSIpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDhdXSk7CiAgfSkpOwogIHJldHVybiBfdXBsb2FkVG9JUEZTLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBkb3dubG9hZEZyb21JUEZTKF94MikgewogIHJldHVybiBfZG93bmxvYWRGcm9tSVBGUy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZG93bmxvYWRGcm9tSVBGUygpIHsKICBfZG93bmxvYWRGcm9tSVBGUyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoY2lkKSB7CiAgICB2YXIgcmVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBpcGZzLmNhdChjaWQpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgIHJlcyA9IG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShyZXMpOwogICAgICAgICAgICBjb25zb2xlLmxvZygiZG93bmxvYWQgZnJvbSBpcGZzOiIsIHJlcyk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA5OwogICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQzLnQwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsICItMSIpOwoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzAsIDldXSk7CiAgfSkpOwogIHJldHVybiBfZG93bmxvYWRGcm9tSVBGUy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9"},{"version":3,"sources":["/Users/xufei/Desktop/FlowModel/src/utils/ipfsUtil.js"],"names":["ipfsAPI","require","ipfs","ipfsServerIP","ipfsServerPort","setupIPFS","host","port","protocol","id","console","log","error","uploadToIPFS","data","add","Buffer","from","res","hash","downloadFromIPFS","cid","cat","TextDecoder","decode"],"mappings":";;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAIC,IAAI,GAAG,IAAX;AACA,IAAMC,YAAY,GAAG,eAArB;AACA,IAAMC,cAAc,GAAG,MAAvB;AAEA,gBAAsBC,SAAtB;AAAA;AAAA;;;uEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEKH,IAAI,IAAI,IAFb;AAAA;AAAA;AAAA;;AAGKA,YAAAA,IAAI,GAAGF,OAAO,CAAC;AAACM,cAAAA,IAAI,EAAEH,YAAP;AAAqBI,cAAAA,IAAI,EAAEH,cAA3B;AAA2CI,cAAAA,QAAQ,EAAE;AAArD,aAAD,CAAd;AAHL;AAAA,mBAIsBN,IAAI,CAACO,EAAL,EAJtB;;AAAA;AAIWA,YAAAA,EAJX;AAKKC,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,EAAE,CAACA,EAAnC;;AALL;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQDC,YAAAA,OAAO,CAACE,KAAR;;AARC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYP,gBAAsBC,YAAtB;AAAA;AAAA;;;0EAAO,kBAA4BC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBZ,IAAI,CAACa,GAAL,CAASC,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAT,CAFjB;;AAAA;AAEKI,YAAAA,GAFL;AAGCR,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,GAAG,CAAC,CAAD,CAAH,CAAOC,IAA1C;AAHD,8CAIQD,GAAG,CAAC,CAAD,CAAH,CAAOC,IAJf;;AAAA;AAAA;AAAA;AAMCT,YAAAA,OAAO,CAACE,KAAR;AAND,8CAOQ,IAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWP,gBAAsBQ,gBAAtB;AAAA;AAAA;;;8EAAO,kBAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBnB,IAAI,CAACoB,GAAL,CAASD,GAAT,CAFjB;;AAAA;AAEKH,YAAAA,GAFL;AAGCA,YAAAA,GAAG,GAAG,IAAIK,WAAJ,GAAkBC,MAAlB,CAAyBN,GAAzB,CAAN;AACAR,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,GAAnC;AAJD,8CAKQA,GALR;;AAAA;AAAA;AAAA;AAOCR,YAAAA,OAAO,CAACE,KAAR;AAPD,8CAQQ,IARR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["const ipfsAPI = require(\"ipfs-api\");\nlet ipfs = null;\nconst ipfsServerIP = \"10.100.117.41\";\nconst ipfsServerPort = \"5001\";\n\nexport async function setupIPFS() {\n    try {\n        if (ipfs == null) {\n            ipfs = ipfsAPI({host: ipfsServerIP, port: ipfsServerPort, protocol: \"http\"});\n            const id = await ipfs.id();\n            console.log(\"IPFS instance id\", id.id);\n        }\n    } catch (err) {\n      console.error(err);\n    }\n}\n\nexport async function uploadToIPFS(data) {\n    try {\n        let res = await ipfs.add(Buffer.from(data));\n        console.log(\"upload to ipfs res:\", res[0].hash);\n        return res[0].hash;\n    } catch (err) {\n        console.error(err);\n        return \"-1\";\n    }\n}\n\nexport async function downloadFromIPFS(cid) {\n    try {\n        let res = await ipfs.cat(cid);\n        res = new TextDecoder().decode(res);\n        console.log(\"download from ipfs:\", res);\n        return res;\n    } catch (err) {\n        console.error(err);\n        return \"-1\";\n    }\n}"]}]}