{"remainingRequest":"/Users/wangxufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangxufei/Desktop/FlowModel/src/components/create/Editor.vue?vue&type=style&index=0&id=217583c0&lang=scss&scoped=true&","dependencies":[{"path":"/Users/wangxufei/Desktop/FlowModel/src/components/create/Editor.vue","mtime":1652163070441},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangxufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubW9kZWxzIHsKICAuZHJhdyB7CiAgICAubGVmdC1jb250YWluZXIgewogICAgICB3aWR0aDogMjAwcHg7CiAgICAgIC5sZWZ0IHsKICAgICAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICAgICAgdG9wOiAxMjBweDsKICAgICAgICB3aWR0aDogMjAwcHg7CiAgICAgICAgaGVpZ2h0OiAyMjBweDsKICAgICAgICBsZWZ0OiA2MHB4OwogICAgICAgIGJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgxODAsIDE4MCwgMTgwLCAwLjgpOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgICAgICAgLy8gYm9yZGVyOiAjZTllOWU5IDFweCBzb2xpZDsKCiAgICAgICAgL2RlZXAvIC54Ni13aWRnZXQtc3RlbmNpbC1jb250ZW50IHsKICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgICAgICAgfQogICAgICAgIC9kZWVwLyAueDYtd2lkZ2V0LXN0ZW5jaWwtZ3JvdXAtdGl0bGUgewogICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICAgICAgICB9CiAgICAgICAgL2RlZXAvIC54Ni13aWRnZXQtc3RlbmNpbC1jb250ZW50IHsKICAgICAgICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7CiAgICAgICAgfQogICAgICAgIC9kZWVwLy54Ni13aWRnZXQtc3RlbmNpbC10aXRsZSB7CiAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4OwogICAgICAgIH0KICAgICAgICAvZGVlcC8gLng2LXdpZGdldC1zdGVuY2lsIHsKICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgICAgICAgfQogICAgICB9CgogICAgICAubWludC1idG4gewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDsKICAgICAgICBib3JkZXI6ICM4NTg1ODUgIWltcG9ydGFudDsKICAgICAgICBjb2xvcjogIzYxNjA2MCAhaW1wb3J0YW50OwogICAgICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgICAgICB0b3A6IDQ1MHB4OwogICAgICAgIHdpZHRoOiAyMDBweDsKICAgICAgICBoZWlnaHQ6IDQwcHg7CiAgICAgICAgbGVmdDogNjBweDsKICAgICAgICBib3gtc2hhZG93OiAwIDAgNnB4IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44KSAhaW1wb3J0YW50OwogICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgICAgIH0KCiAgICAgIC5ydWxlLWxpc3QgewogICAgICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgICAgICB0b3A6IDUyMHB4OwogICAgICAgIGxlZnQ6IDYwcHg7CiAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDsKICAgICAgICBib3gtc2hhZG93OiAwIDAgNnB4IHJnYmEoMTgwLCAxODAsIDE4MCwgMC44KTsKICAgICAgfQogICAgfQoKICAgIC5kcmF3LW1haW4tYm94IHsKICAgICAgcG9zaXRpb246IGZpeGVkOwogICAgICBsZWZ0OiAyNTBweDsKICAgICAgLy8gb3ZlcmZsb3c6IHNjcm9sbDsKICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1MHB4KTsKICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAvL2JhY2tncm91bmQ6IHVybCgiLi4vLi4vYXNzZXRzL2JnLnBuZyIpOwoKICAgICAgLmVkaXRvci1zZWN0aW9uIHsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIC8vIG92ZXJmbG93OiBzY3JvbGw7CiAgICAgICAgbWFyZ2luOiA0MHB4IGF1dG87CiAgICAgICAgd2lkdGg6IDkwJTsKICAgICAgICBoZWlnaHQ6IDcwJTsKICAgICAgICAvLyBib3JkZXI6IHNvbGlkIDJweCAjZjRmNGY0OwogICAgICAgIGJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgxODAsIDE4MCwgMTgwLCAwLjgpOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7CgogICAgICAgIC9kZWVwLyAueDYtZ3JhcGgtc2Nyb2xsZXIgewogICAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDsKICAgICAgICB9CgogICAgICAgIC9kZWVwLyAueDYtZ3JhcGgtc2Nyb2xsZXItcGFubmFibGUgewogICAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDsKICAgICAgICB9CgogICAgICAgIC5jYW52YXMtbWFpbiB7CiAgICAgICAgICBmbGV4OiAxOwogICAgICAgIH0KICAgICAgfQogICAgfQogICAgLnJpZ2h0LWNvbnRhaW5lciB7CiAgICAgIHdpZHRoOiAzMDBweDsKICAgICAgcG9zaXRpb246IGZpeGVkOwogICAgICB0b3A6IDUwcHg7CiAgICAgIHJpZ2h0OiAwcHg7CiAgICAgIGhlaWdodDogMTAwJTsKICAgIH0KICB9CiAgLmRhdGEtdmlzdWFsLXBhbmVsIHsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIGJvdHRvbTogMjBweDsKICAgIGxlZnQ6IDIwcHg7CiAgICAudmlzdWFsLWJ1dHRvbiB7CiAgICAgIC8vIGRpc3BsYXk6IGZsZXg7CiAgICAgIC8vIHdpZHRoOiAxMDAlOwogICAgICAvLyAmOmhvdmVyIHsKICAgICAgLy8gICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIC8vIH0KICAgICAgLy8gc3BhbiB7CiAgICAgIC8vICAgbWFyZ2luOiBhdXRvOwogICAgICAvLyAgIHBhZGRpbmc6IDAuM2VtIDFlbSAwLjVlbTsKICAgICAgLy8gICBiYWNrZ3JvdW5kOiAjNDA5ZWZmOwogICAgICAvLyAgIGNvbG9yOiB3aGl0ZTsKCiAgICAgIC8vICAgYm9yZGVyLXJhZGl1czogM3B4OwogICAgICAvLyAgIGJveC1zaGFkb3c6IDAgMCAwLjVlbSAjODU4NTg1OwogICAgICAvLyAgIC8vIGFuaW1hdGlvbjogc2hha2UgMnMgZWFzZSAwcyBpbmZpbml0ZTsKICAgICAgLy8gICAvLyBhbmltYXRpb24tcGxheS1zdGF0ZTogcGF1c2VkOwoKICAgICAgLy8gICAvLyAmOmhvdmVyIHsKICAgICAgLy8gICAvLyAgIGFuaW1hdGlvbi1wbGF5LXN0YXRlOiBydW5uaW5nOwogICAgICAvLyAgIC8vIH0KICAgICAgLy8gfQoKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50OwogICAgICBib3JkZXI6ICM4NTg1ODUgIWltcG9ydGFudDsKICAgICAgY29sb3I6ICM2MTYwNjAgIWltcG9ydGFudDsKICAgICAgcG9zaXRpb246IGZpeGVkOwogICAgICB0b3A6IDM4MHB4OwogICAgICB3aWR0aDogMjAwcHg7CiAgICAgIGhlaWdodDogNDBweDsKICAgICAgbGVmdDogNjBweDsKICAgICAgYm94LXNoYWRvdzogMCAwIDZweCByZ2JhKDE4MCwgMTgwLCAxODAsIDAuOCkgIWltcG9ydGFudDsKICAgICAgYm9yZGVyLXJhZGl1czogMjBweDsKICAgIH0KICB9CiAgLnNob3cgewogICAgdmlzaWJpbGl0eTogaGlkZGVuOwogIH0KICAudmlzdWFsLWRpYWxvZyB7CiAgICBmb250LXNpemU6IDIwcHg7CiAgfQogIEBrZXlmcmFtZXMgc2hha2UgewogICAgZnJvbSB7CiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOwogICAgfQogICAgNCUgewogICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg1ZGVnKTsKICAgIH0KICAgIDEyLjUlIHsKICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTVkZWcpOwogICAgfQogICAgMjElIHsKICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNWRlZyk7CiAgICB9CiAgICAyOSUgewogICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNWRlZyk7CiAgICB9CiAgICAzNy41JSB7CiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDVkZWcpOwogICAgfQogICAgNDYlIHsKICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTVkZWcpOwogICAgfQogICAgNTAlLAogICAgdG8gewogICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Editor.vue"],"names":[],"mappingsypfile":"Editor.vue","sourceRoot":"src/components/create","sourcesContent":["<template>\n  <div class=\"models\">\n    <div class=\"draw\">\n      <!-- 左侧控件 -->\n      <div class=\"left-container\">\n        <div class=\"left\" id=\"left\"></div>\n\n        <!-- Mint 按钮 -->\n        <el-button\n          type=\"text\"\n          class=\"mint-btn\"\n          @click=\"centerDialogVisible = true\"\n        >\n          Mint\n        </el-button>\n        <el-dialog\n          title=\"Mint New Model\"\n          :visible.sync=\"centerDialogVisible\"\n          width=\"30%\"\n          center\n        >\n          <MintForm :close=\"closeMintEdit\" />\n          <!-- <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"centerDialogVisible = false\">Cancel</el-button>\n            <el-button type=\"primary\" @click=\"centerDialogVisible = false\">Confirm</el-button>\n          </span> -->\n        </el-dialog>\n        <div class=\"rule-list\">\n          <RuleList />\n        </div>\n      </div>\n      <div class=\"draw-main-box\">\n        <!-- 面板中心区域 -->\n        <div class=\"editor-section\">\n          <div id=\"canvas-main\" class=\"canvas-main\"></div>\n        </div>\n      </div>\n      <!-- 工具导航栏 -->\n      <div class=\"tools-navbar\">\n        <div class=\"tools-navbar\" id=\"tools-navbar\">\n          <ToolsNavbar />\n        </div>\n      </div>\n      <!-- 右侧控件 -->\n      <transition name=\"el-fade-in-linear\">\n        <div class=\"right-container\" v-bind:class=\"{ show: nodeEditShow }\">\n          <NodeEdit :closeNodeEdit=\"closeNodeEdit\" />\n        </div>\n      </transition>\n    </div>\n    <!-- 数据可视化面板 -->\n    <div class=\"data-visual-panel\">\n      <el-button class=\"visual-button\" @click=\"visualPanelVisible = true\">\n        Data Visualization\n      </el-button>\n    </div>\n    <el-dialog\n      title=\"Modeling data visualization\"\n      :visible.sync=\"visualPanelVisible\"\n      width=\"60%\"\n    >\n      <VisualPanel />\n    </el-dialog>\n    <!-- 模型导入面板 -->\n    <!-- <el-dialog title=\"Model upload\" :visible.sync=\"uploadShow\" width=\"60%\">\n      <ModelUpload />\n    </el-dialog> -->\n  </div>\n</template>\n\n<script>\nimport VisualPanel from \"./VisualPanel\";\nimport ModelUpload from \"./ModelUpload\";\nimport NodeEdit from \"./NodeEdit\";\nimport ToolsNavbar from \"./ToolsNavbar\";\nimport MintForm from \"../Template/MintForm\";\nimport RuleList from \"../create/RuleList\";\nimport { Addon, Graph, Shape } from \"@antv/x6\";\nconst { Stencil } = Addon;\nconst { Rect, Circle } = Shape;\n// 导入链接桩配置\nimport { PortsConfig } from \"../../graph/portsConfig\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { querymodel } from \"../../api/index\";\nimport { setStore } from \"../../utils/storage\";\nimport { connectMetamask } from \"../../api/web3/contracts\";\n\nconst antlr4 = require(\"antlr4\");\nconst InputStream = antlr4.InputStream;\nconst CommonTokenStream = antlr4.CommonTokenStream;\nconst GrammarParser = require(\"../../parser/PropertyParser\").PropertyParser;\nconst GrammarLexer = require(\"../../parser/PropertyLexer\").PropertyLexer;\n\nexport default {\n  data() {\n    return {\n      loaded: false,\n      nodeEditShow: true,\n      visualPanelVisible: false,\n      // uploadShow: false,\n      centerDialogVisible: false,\n    };\n  },\n  components: {\n    VisualPanel,\n    ModelUpload,\n    NodeEdit,\n    ToolsNavbar,\n    MintForm,\n    RuleList,\n  },\n  methods: {\n    ...mapMutations([\n      \"STORAGE_GRAPH\",\n      \"LOAD_GRAPH\",\n      \"POSITIONING_GRAPH\",\n      \"INIT_GRAPH\",\n      \"CLOSE_UPLOAD_DIALOG\",\n      \"SET_EDIT_CELLS\",\n      \"MODIFY_HISTORY_SIMULATE_DATA\",\n      \"MODIFY_CONFIGDATA\",\n      \"SET_USER\",\n      \"LOAD_RULE_LISTS\",\n    ]),\n\n    // 画布初始化\n    initGrapg() {\n      let cur_graph = new Graph({\n        container: document.getElementById(\"canvas-main\"),\n        selecting: true,\n        autoResize: true,\n        history: true,\n        background: {\n          color: \"#fff\",\n        },\n        grid: {\n          size: 30,\n          visible: true,\n        },\n        snapline: {\n          enabled: true,\n          sharp: true,\n        },\n        scroller: {\n          enabled: true,\n          pageVisible: false,\n          pageBreak: false,\n          pannable: true,\n          modifiers: [\"shift\"],\n        },\n        mousewheel: {\n          enabled: true,\n          zoomAtMousePosition: true,\n          modifiers: [\"ctrl\", \"meta\"],\n          minScale: 0.5,\n          maxScale: 3,\n        },\n        connecting: {\n          router: {\n            name: \"manhattan\",\n            args: {\n              padding: 1,\n            },\n          },\n          connector: {\n            name: \"rounded\",\n            args: {\n              radius: 8,\n            },\n          },\n          anchor: \"center\",\n          connectionPoint: \"anchor\",\n          allowBlank: false,\n          snap: {\n            radius: 20,\n          },\n          createEdge() {\n            return new Shape.Edge({\n              attrs: {\n                line: {\n                  // stroke: {\n                  //   type: \"linearGradient\",\n                  //   stops: [\n                  //     { offset: \"0%\", color: \"#ccc\" },\n                  //     { offset: \"50%\", color: \"#73d13d\" },\n                  //     { offset: \"100%\", color: \"#ccc\" },\n                  //   ],\n                  // },\n                  stroke: \"#b3b3b3\",\n                  strokeWidth: 2,\n                  targetMarker: {\n                    name: \"block\",\n                    width: 6,\n                    height: 8,\n                    // fill: \"#ccc\", // 使用自定义填充色\n                    stroke: \"#b3b3b3\", // 使用自定义边框色\n                  },\n                },\n              },\n\n              data: {\n                type: \"Edge\",\n                inside: 0.5,\n                outside: 0.5,\n              },\n              zIndex: 0,\n            });\n          },\n          validateConnection({ targetMagnet }) {\n            return !!targetMagnet;\n          },\n        },\n        highlighting: {\n          magnetAdsorbed: {\n            name: \"stroke\",\n            args: {\n              attrs: {\n                fill: \"#5F95FF\",\n                stroke: \"#5F95FF\",\n              },\n            },\n          },\n        },\n        resizing: {\n          enabled: true,\n        },\n        selecting: {\n          enabled: true,\n          rubberband: true,\n          showNodeSelectionBox: true,\n        },\n\n        keyboard: true,\n        clipboard: true,\n      });\n      this.INIT_GRAPH(cur_graph);\n    },\n\n    // 初始化画布侧边栏\n    initStencil() {\n      this.stencil = new Stencil({\n        title: \"Components\",\n        target: this.graph,\n\n        //collapsable: true,\n        stencilGraphWidth: 200,\n        stencilGraphHeight: 180,\n        groups: [\n          {\n            name: \"Components\",\n          },\n        ],\n      });\n\n      document.getElementById(\"left\").appendChild(this.stencil.container);\n      const stake = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            stakeData: {\n              rewardPolicyFrom: \"\",\n              stakeAmount: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n            },\n          },\n          type: \"Stake\",\n        },\n        attrs: {\n          rect: {\n            fill: \"rgb(156,192,2327)\",\n            stroke: \"#E6A23C\",\n            strokeWidth: 0,\n          },\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n          text: { text: \"Stake\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      const unStake = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            unstakeData: {\n              coolDownTime: 0,\n              unstakeAmount: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n            },\n          },\n          type: \"Unstake\",\n        },\n        attrs: {\n          rect: { fill: \"rgb(164,205,231)\", stroke: \"#67C23A\", strokeWidth: 0 },\n          text: { text: \"Unstake\", fill: \"#fff\" },\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n        },\n        ports: PortsConfig,\n      });\n\n      const token = new Circle({\n        width: 60,\n        height: 60,\n        data: {\n          //业务数据\n          nodeData: {\n            tokenData: {\n              totalSupply: 0,\n              allocations: [\n                { name: \"Team\", prop: 0, class: \"team-slider\" },\n                { name: \"Investor\", prop: 0, class: \"investor-slider\" },\n                { name: \"Advisor\", prop: 0, class: \"advisor-slider\" },\n                { name: \"Foundation\", prop: 0, class: \"foundation-slider\" },\n                { name: \"Community\", prop: 0, class: \"community-slider\" },\n              ],\n              community: {\n                allocations: [\n                  { name: \"Airdrop\", prop: 0, class: \"airdrop-turntable\" },\n                  { name: \"Staking\", prop: 0, class: \"staking-turntable\" },\n                ],\n                stakingLifetime: 0,\n                stakingRewardRefresh: 0,\n                stakingRewardDecreaseFactor: 0,\n              },\n            },\n          },\n          type: \"Token\",\n        },\n        attrs: {\n          circle: {\n            fill: \"rgb(183,192,228)\",\n            strokeWidth: 0,\n            stroke: \"#409EFF\",\n          },\n          text: { text: \"Token\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      const vest = new Rect({\n        width: 70,\n        height: 40,\n        data: {\n          //业务数据\n          nodeData: {\n            vestData: {\n              vestAmount: [\n                {\n                  name: \"Team\",\n                  prop: 0,\n                  class: \"team-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Investor\",\n                  prop: 0,\n                  class: \"investor-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Advisor\",\n                  prop: 0,\n                  class: \"advisor-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Foundation\",\n                  prop: 0,\n                  class: \"foundation-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n                {\n                  name: \"Community\",\n                  prop: 0,\n                  class: \"community-slider\",\n                  lockUpTime: 0,\n                  releasePeriod: 0,\n                  cliff: 0,\n                },\n              ],\n            },\n          },\n          type: \"Vest\",\n        },\n        attrs: {\n          body: {\n            rx: 15,\n            ry: 15,\n          },\n          rect: {\n            fill: \"rgb(205,149,187)\",\n            stroke: \"#F56C6C\",\n            // stroke: {\n            //   type: \"linearGradient\",\n            //   stops: [\n            //     { offset: \"0%\", color: \"#ccc\" },\n            //     { offset: \"50%\", color: \"#73d13d\" },\n            //     { offset: \"100%\", color: \"#ccc\" },\n            //   ],\n            // },\n            strokeWidth: 0,\n          },\n          text: { text: \"Vest\", fill: \"#fff\" },\n        },\n        ports: PortsConfig,\n      });\n\n      this.stencil.load(\n        [token.clone(), vest.clone(), stake.clone(), unStake.clone()],\n        \"Components\"\n      );\n    },\n    //初始化快捷键\n    initShortcutkey() {\n      //快捷事件\n      this.graph.bindKey([\"meta+c\", \"ctrl+c\"], () => {\n        const cells = this.graph.getSelectedCells();\n        if (cells.length) {\n          this.graph.copy(cells);\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+x\", \"ctrl+x\"], () => {\n        const cells = this.graph.getSelectedCells();\n        if (cells.length) {\n          this.graph.cut(cells);\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+v\", \"ctrl+v\"], () => {\n        if (!this.graph.isClipboardEmpty()) {\n          const cells = this.graph.paste({ offset: 32 });\n          this.graph.cleanSelection();\n          this.graph.select(cells);\n        }\n        return false;\n      });\n      //undo redo\n      this.graph.bindKey([\"meta+z\", \"ctrl+z\"], () => {\n        if (this.graph.history.canUndo()) {\n          this.graph.history.undo();\n        }\n        return false;\n      });\n      this.graph.bindKey([\"meta+shift+z\", \"ctrl+shift+z\"], () => {\n        if (this.graph.history.canRedo()) {\n          this.graph.history.redo();\n        }\n        return false;\n      });\n\n      // select all\n      this.graph.bindKey([\"meta+a\", \"ctrl+a\"], () => {\n        const nodes = this.graph.getNodes();\n        if (nodes) {\n          this.graph.select(nodes);\n        }\n      });\n\n      // zoom\n      this.graph.bindKey([\"ctrl+1\", \"meta+1\"], () => {\n        const zoom = this.graph.zoom();\n        if (zoom < 1.5) {\n          this.graph.zoom(0.1);\n        }\n      });\n      this.graph.bindKey([\"ctrl+2\", \"meta+2\"], () => {\n        const zoom = this.graph.zoom();\n        if (zoom > 0.5) {\n          this.graph.zoom(-0.1);\n        }\n      });\n    },\n    initWatchEvent() {\n      // 节点编辑\n      this.graph.on(\"cell:contextmenu\", ({ e, x, y, cell, view }) => {\n        // TODO (Xufei) 需要重新设计 Token 不能被编辑的逻辑 Token.type == 2 的不能被编辑？\n        // if (\n        //   cell.getData().type == \"Token\" &&\n        //   this.graph.getPredecessors(cell).length != 0\n        // ) {\n        //   this.$message({\n        //     showClose: true,\n        //     message: \"The current node cannot be edited!\",\n        //     type: \"warning\",\n        //   });\n        //   return;\n        // }\n        this.nodeEditShow = false;\n        this.SET_EDIT_CELLS(cell);\n      });\n      // 注册监听事件，当新增节点或边调用，实时存储\n      this.graph.on(\"node:added\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n\n      this.graph.on(\"cell:added\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      this.graph.on(\"cell:changed\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      this.graph.on(\"cell:removed\", ({ cell, options }) => {\n        this.STORAGE_GRAPH();\n      });\n      // 控制连接桩显示/隐藏\n      const showPorts = (ports, show) => {\n        for (let i = 0, len = ports.length; i < len; i = i + 1) {\n          ports[i].style.visibility = show ? \"visible\" : \"hidden\";\n        }\n      };\n      this.graph.on(\"node:mouseenter\", () => {\n        const container = document.getElementById(\"canvas-main\");\n        const ports = container.querySelectorAll(\".x6-port-body\");\n        showPorts(ports, true);\n      });\n      this.graph.on(\"node:mouseleave\", () => {\n        const container = document.getElementById(\"canvas-main\");\n        const ports = container.querySelectorAll(\".x6-port-body\");\n        showPorts(ports, false);\n      });\n      this.graph.on(\"cell:dblclick\", ({ cell, e }) => {\n        const name = cell.isEdge() ? \"edge-editor\" : \"node-editor\";\n        cell.removeTool(name);\n        cell.addTools([\n          {\n            name,\n            args: {\n              event: e,\n            },\n          },\n        ]);\n      });\n    },\n    // 节点编辑面板\n    closeNodeEdit() {\n      this.nodeEditShow = true;\n    },\n    closeMintEdit() {\n      this.centerDialogVisible = false;\n    },\n    loadGraphFromBack() {\n      if (this.$route.query.metadataHash == null) {\n        //导入已有节点信息\n        this.LOAD_GRAPH();\n        //进行一次聚焦\n        this.POSITIONING_GRAPH();\n        return;\n      }\n\n      connectMetamask(this.web3Provider).then((response) => {\n        if (response.status) {\n          this.SET_USER(response.account[0]);\n\n          const req = {\n            accountAddr: this.user,\n            metadataHash: this.$route.query.metadataHash,\n          };\n          querymodel(req).then((res) => {\n            if (res.message_code == this.statusCode.SUCCESSED) {\n              const modelData = JSON.parse(res.data.modelData);\n              const results = JSON.parse(res.data.results);\n              this.MODIFY_HISTORY_SIMULATE_DATA(results);\n              const params = JSON.parse(res.data.params);\n              this.MODIFY_CONFIGDATA([\n                params.configData.simulationDays,\n                params.configData.simulationSlot,\n              ]);\n              setStore(\"graph\", modelData);\n\n              //导入已有节点信息\n              this.LOAD_GRAPH();\n              //进行一次聚焦\n              this.POSITIONING_GRAPH();\n            } else {\n              this.$notify.error({\n                title: \"Error\",\n                message: \"Identity verification failed!\",\n                position: \"bottom-right\",\n              });\n              this.$router.push({\n                path: \"/create\",\n              });\n            }\n          });\n        } else {\n          this.$notify.error({\n            title: \"Error\",\n            message: \"Identity verification failed!\",\n            position: \"bottom-right\",\n          });\n          this.$router.push({\n            path: \"/create\",\n          });\n        }\n      });\n    },\n  },\n\n  mounted() {\n    // 初始化面板\n    this.initGrapg();\n    // 初始化面板相关快捷键\n    this.initShortcutkey();\n    // 初始化左侧控件\n    this.initStencil();\n\n    //判断是否是由详情页跳转过来的\n    this.loadGraphFromBack();\n    //初始化相关监听事件\n    this.initWatchEvent();\n    this.LOAD_RULE_LISTS();\n    \n  },\n  computed: {\n    ...mapState([\n      \"graph\",\n      \"uploadDialog\",\n      \"editNode\",\n      \"statusCode\",\n      \"user\",\n      \"historySimulateData\",\n    ]),\n  },\n  watch: {\n    // uploadDialog(val) {\n    //   this.uploadShow = val;\n    // },\n    // uploadShow(val) {\n    //   if (!val) {\n    //     this.CLOSE_UPLOAD_DIALOG();\n    //   }\n    // },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.models {\n  .draw {\n    .left-container {\n      width: 200px;\n      .left {\n        position: fixed;\n        top: 120px;\n        width: 200px;\n        height: 220px;\n        left: 60px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n        border-radius: 20px;\n        // border: #e9e9e9 1px solid;\n\n        /deep/ .x6-widget-stencil-content {\n          background-color: #fff;\n        }\n        /deep/ .x6-widget-stencil-group-title {\n          background-color: #fff;\n        }\n        /deep/ .x6-widget-stencil-content {\n          border-radius: inherit;\n        }\n        /deep/.x6-widget-stencil-title {\n          border-radius: 20px;\n        }\n        /deep/ .x6-widget-stencil {\n          border-radius: 20px;\n        }\n      }\n\n      .mint-btn {\n        background-color: #fff !important;\n        border: #858585 !important;\n        color: #616060 !important;\n        position: fixed;\n        top: 450px;\n        width: 200px;\n        height: 40px;\n        left: 60px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8) !important;\n        border-radius: 20px;\n      }\n\n      .rule-list {\n        position: fixed;\n        top: 520px;\n        left: 60px;\n        border-radius: 20px;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n      }\n    }\n\n    .draw-main-box {\n      position: fixed;\n      left: 250px;\n      // overflow: scroll;\n      width: calc(100% - 250px);\n      height: 100%;\n      //background: url(\"../../assets/bg.png\");\n\n      .editor-section {\n        display: flex;\n        // overflow: scroll;\n        margin: 40px auto;\n        width: 90%;\n        height: 70%;\n        // border: solid 2px #f4f4f4;\n        box-shadow: 0 0 6px rgba(180, 180, 180, 0.8);\n        border-radius: 30px;\n\n        /deep/ .x6-graph-scroller {\n          border-radius: 30px;\n        }\n\n        /deep/ .x6-graph-scroller-pannable {\n          border-radius: 30px;\n        }\n\n        .canvas-main {\n          flex: 1;\n        }\n      }\n    }\n    .right-container {\n      width: 300px;\n      position: fixed;\n      top: 50px;\n      right: 0px;\n      height: 100%;\n    }\n  }\n  .data-visual-panel {\n    position: fixed;\n    bottom: 20px;\n    left: 20px;\n    .visual-button {\n      // display: flex;\n      // width: 100%;\n      // &:hover {\n      //   cursor: pointer;\n      // }\n      // span {\n      //   margin: auto;\n      //   padding: 0.3em 1em 0.5em;\n      //   background: #409eff;\n      //   color: white;\n\n      //   border-radius: 3px;\n      //   box-shadow: 0 0 0.5em #858585;\n      //   // animation: shake 2s ease 0s infinite;\n      //   // animation-play-state: paused;\n\n      //   // &:hover {\n      //   //   animation-play-state: running;\n      //   // }\n      // }\n\n      background-color: #fff !important;\n      border: #858585 !important;\n      color: #616060 !important;\n      position: fixed;\n      top: 380px;\n      width: 200px;\n      height: 40px;\n      left: 60px;\n      box-shadow: 0 0 6px rgba(180, 180, 180, 0.8) !important;\n      border-radius: 20px;\n    }\n  }\n  .show {\n    visibility: hidden;\n  }\n  .visual-dialog {\n    font-size: 20px;\n  }\n  @keyframes shake {\n    from {\n      transform: rotate(0deg);\n    }\n    4% {\n      transform: rotate(5deg);\n    }\n    12.5% {\n      transform: rotate(-5deg);\n    }\n    21% {\n      transform: rotate(5deg);\n    }\n    29% {\n      transform: rotate(-5deg);\n    }\n    37.5% {\n      transform: rotate(5deg);\n    }\n    46% {\n      transform: rotate(-5deg);\n    }\n    50%,\n    to {\n      transform: rotate(0deg);\n    }\n  }\n}\n</style>"]}]}