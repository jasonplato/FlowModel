{"remainingRequest":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xufei/Desktop/FlowModel/src/components/create/RuleEdit.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/xufei/Desktop/FlowModel/src/components/create/RuleEdit.vue","mtime":1653708835747},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/css-loader/dist/cjs.js","mtime":1653708689646},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1653708694637},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/postcss-loader/src/index.js","mtime":1653708693104},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/sass-loader/dist/cjs.js","mtime":1653708694028},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js","mtime":1653708694636}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJ1bGUtZWRpdC1jb250YWluZXIgewogIHdpZHRoOiA0MDBweDsKICAuZWwtZGlhbG9nIHsKICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgfQogIC5uYW1lIHsKICAgIC5uYW1lLWlucHV0IHsKICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7CiAgICAgIHdpZHRoOiAzMDBweDsKICAgIH0KICB9CiAgLmNvbnRlbnQgewogICAgbWFyZ2luLXRvcDogMjBweDsKICAgIC5jb250ZW50LWlucHV0IHsKICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICAgIHdpZHRoOiAzMDBweDsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["RuleEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RuleEdit.vue","sourceRoot":"src/components/create","sourcesContent":["<template >\n  <div>\n    <div class=\"rule-edit-container\" v-if=\"loaded\">\n      <el-dialog\n        title=\"Property Edit\"\n        :visible.sync=\"ruleEditShow.show\"\n        width=\"30%\"\n      >\n        <div class=\"name\">\n          <span>Property Name:</span\n          ><el-input\n            class=\"name-input\"\n            v-model=\"newRule.label\"\n            placeholder=\"\"\n          ></el-input>\n        </div>\n\n        <div class=\"content\">\n          <span>Property Content:</span>\n          <el-input\n            class=\"content-input\"\n            v-model=\"newRule.content\"\n            placeholder=\"\"\n          ></el-input>\n        </div>\n\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"ruleEditShow.show = false\">Cancel</el-button>\n          <el-button type=\"primary\" @click=\"edit()\">Confirm</el-button>\n        </span>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nconst antlr4 = require(\"antlr4\");\nconst InputStream = antlr4.InputStream;\nconst CommonTokenStream = antlr4.CommonTokenStream;\nconst GrammarParser = require(\"../../parser/PropertyParser\").PropertyParser;\nconst GrammarLexer = require(\"../../parser/PropertyLexer\").PropertyLexer;\n\nexport default {\n  data() {\n    return {\n      newRule: null,\n      loaded: false,\n    };\n  },\n  methods: {\n    ...mapMutations([\"SAVE_EDIT_RULE\"]),\n    edit() {\n      // 每次编辑完 / 修改完 property 之后，property 的 status 应重置为 false\n      this.newRule.status = false;\n      try {\n        // 对于用户输入的 property 进行语法检查\n        const inputStream = new InputStream(this.newRule.content);\n        const lexer = new GrammarLexer(inputStream);\n        const tokenStream = new CommonTokenStream(lexer);\n        const parser = new GrammarParser(tokenStream);\n        parser.removeErrorListeners();\n        parser.addErrorListener({\n          syntaxError: (recognizer, offendingSymbol, line, column, msg, err) => {\n            console.error(`${offendingSymbol} line ${line}, col ${column}: ${msg}`);\n            throw err;\n          }\n        });\n        const tree = parser.check();\n\n        // 语法检查通过后，保存 property\n        this.SAVE_EDIT_RULE(this.newRule);\n        this.ruleEditShow.show = false;\n      } catch {\n        alert(\"Wrong Grammar!\");\n      }\n      \n    },\n  },\n  computed: {\n    ...mapState([\"ruleEditShow\", \"editRule\", \"ruleLists\"]),\n  },\n  mounted() {\n    if (!this.ruleEditShow.add) {\n      this.newRule = Object.assign({}, this.editRule);\n    } else {\n      let newId = 0;\n      if (this.ruleLists.length == 0) {\n      } else {\n        newId = this.ruleLists[this.ruleLists.length - 1].id + 1;\n      }\n\n      this.newRule = { id: newId, label: \"\", content: \"\", status: false };\n    }\n    this.loaded = true;\n  },\n};\n</script>\n<style lang=\"scss\">\n.rule-edit-container {\n  width: 400px;\n  .el-dialog {\n    border-radius: 20px;\n  }\n  .name {\n    .name-input {\n      margin-left: 20px;\n      width: 300px;\n    }\n  }\n  .content {\n    margin-top: 20px;\n    .content-input {\n      margin-left: 10px;\n      width: 300px;\n    }\n  }\n}\n</style>"]}]}