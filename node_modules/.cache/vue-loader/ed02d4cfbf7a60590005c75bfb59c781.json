{"remainingRequest":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xufei/Desktop/FlowModel/src/components/Detail/OffersDialog.vue?vue&type=style&index=0&id=c963b346&lang=scss&scoped=true&","dependencies":[{"path":"/Users/xufei/Desktop/FlowModel/src/components/Detail/OffersDialog.vue","mtime":1653708835741},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/css-loader/dist/cjs.js","mtime":1653708689646},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1653708694637},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/postcss-loader/src/index.js","mtime":1653708693104},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/sass-loader/dist/cjs.js","mtime":1653708694028},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js","mtime":1653708694636}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbnRlbnQgewogIC8vICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDIyOCwgMjI4LCAyMjgpOwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgLmVsLXRhYmxlIHsKICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgfQogIC5hY2NlcHQgewogICAgZm9udC1zaXplOiAxNnB4OwogICAgZm9udC13ZWlnaHQ6IDYwMDsKICAgIHBhZGRpbmc6IDEwcHg7CiAgICAvLyBib3JkZXI6IDFweCBzb2xpZCAjNDA5ZWZmOwogICAgYm9yZGVyLXRvcC1jb2xvcjogcmdiKDI1NSwgMjMwLCAwKTsKICAgIGJvcmRlci1sZWZ0OiAxcHggZG91YmxlIHJnYig3NiwgMjA5LCAyNTApOwogICAgYm9yZGVyLXJpZ2h0OiAxcHggZG91YmxlIHJnYigyNTUsIDE2OSwgMjQ4KTsKICAgIGJvcmRlci1ib3R0b206IDFweCBkb3VibGUgcmdiKDIwNywgOTQsIDI1Mik7CiAgICBib3JkZXItcmFkaXVzOiAxNXB4OwogIH0KICAuaXRlbSB7CiAgICBmb250LXdlaWdodDogNjAwOwogICAgY29sb3I6IHJnYigxMTMsIDExMywgMTEzKTsKICB9Cn0K"},{"version":3,"sources":["OffersDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OffersDialog.vue","sourceRoot":"src/components/Detail","sourcesContent":["<template >\n  <div class=\"content\">\n    <el-table :data=\"offersData\" style=\"width: 100%\" max-height=\"250\"\n      >>\n      <el-table-column prop=\"price\" label=\"Unit Price\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <span class=\"item\">{{ scope.row.price }} ETH</span>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column prop=\"\" label=\"Quantity\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <span class=\"item\">{{ scope.row.quantity }}</span>\n        </template>\n      </el-table-column> -->\n      <el-table-column prop=\"buyer\" label=\"From\">\n        <template slot-scope=\"scope\">\n          <span class=\"item\"\n            >{{ scope.row.buyer.substr(0, 5) }}...{{\n              scope.row.buyer.substr(38)\n            }}</span\n          >\n        </template>\n      </el-table-column>\n      <el-table-column label=\"\" width=\"150\"\n        ><template slot-scope=\"scope\">\n          <el-button\n            @click=\"confirmSell(scope.row)\"\n            type=\"text\"\n            size=\"small\"\n            class=\"accept\"\n            >Accept</el-button\n          >\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n<script>\nimport { approveNFT, registerNFTSale } from \"../../api/web3/contracts\";\n\nexport default {\n  props: [\"offers\"],\n  data() {\n    return {\n      offersData: [],\n    };\n  },\n  mounted() {\n    this.offersData = this.offers;\n  },\n  methods: {\n    confirmSell(row) {\n      console.log(row.nftId);\n\n      approveNFT().then((chainRes1) => {\n        if (chainRes1.status == \"success\") {\n          this.$notify.success({\n            title: \"Success\",\n            message: \"Approve NFT successful !\",\n            position: \"bottom-right\",\n          });\n          console.log(\"tx response:\", chainRes1.response);\n\n          registerNFTSale(row.nftId).then((chainRes2) => {\n            if (chainRes2.status == \"success\") {\n              this.$notify.success({\n                title: \"Success\",\n                message: \"Approve NFT sale successful !\",\n                position: \"bottom-right\",\n              });\n              console.log(\"tx response:\", chainRes2.response);\n\n            } else {\n              this.$notify.error({\n                title: \"Error\",\n                message: \"Approve NFT sale error !\",\n                position: \"bottom-right\",\n              });\n            }\n          })\n\n        } else {\n          this.$notify.error({\n            title: \"Error\",\n            message: \"Approve NFT error !\",\n            position: \"bottom-right\",\n          });\n        }\n      })\n\n      \n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.content {\n  //   border: 1px solid rgb(228, 228, 228);\n  border-radius: 10px;\n  .el-table {\n    border-radius: 10px;\n  }\n  .accept {\n    font-size: 16px;\n    font-weight: 600;\n    padding: 10px;\n    // border: 1px solid #409eff;\n    border-top-color: rgb(255, 230, 0);\n    border-left: 1px double rgb(76, 209, 250);\n    border-right: 1px double rgb(255, 169, 248);\n    border-bottom: 1px double rgb(207, 94, 252);\n    border-radius: 15px;\n  }\n  .item {\n    font-weight: 600;\n    color: rgb(113, 113, 113);\n  }\n}\n</style>"]}]}