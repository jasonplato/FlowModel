{"remainingRequest":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xufei/Desktop/FlowModel/src/components/create/NodeEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xufei/Desktop/FlowModel/src/components/create/NodeEdit.vue","mtime":1653708835745},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/babel-loader/lib/index.js","mtime":1653708688758},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/cache-loader/dist/cjs.js","mtime":1653708689072},{"path":"/Users/xufei/Desktop/FlowModel/node_modules/vue-loader/lib/index.js","mtime":1653708694636}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCI7CmltcG9ydCBUb2tlbiBmcm9tICIuLi9ub2RlL1Rva2VuIjsKaW1wb3J0IFN0YWtlIGZyb20gIi4uL25vZGUvU3Rha2UiOwppbXBvcnQgVW5zdGFrZSBmcm9tICIuLi9ub2RlL1Vuc3Rha2UiOwppbXBvcnQgVmVzdCBmcm9tICIuLi9ub2RlL1Zlc3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsiY2xvc2VOb2RlRWRpdCJdLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBub2RlVHlwZTogIiIsCiAgICAgIG5vZGVEYXRhOiBudWxsLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNsb3NlKCkgewogICAgICB0aGlzLmNsb3NlTm9kZUVkaXQoKTsKICAgIH0sCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBUb2tlbiwKICAgIFN0YWtlLAogICAgVW5zdGFrZSwKICAgIFZlc3QsCiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoWyJlZGl0Tm9kZSJdKSwKICB9LAogIHdhdGNoOiB7CiAgICBlZGl0Tm9kZSh2YWwpIHsKICAgICAgdGhpcy5ub2RlVHlwZSA9IHZhbC5nZXREYXRhKCkudHlwZTsKICAgICAgdGhpcy5ub2RlRGF0YSA9IHZhbC5nZXREYXRhKCkubm9kZURhdGE7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["NodeEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NodeEdit.vue","sourceRoot":"src/components/create","sourcesContent":["<template >\n  <div class=\"container\">\n    <p class=\"container-title\">\n      Element Attribute Editing\n      <span class=\"node-edit-close-icon\"\n        ><i class=\"el-icon-circle-close\" @click=\"close()\"></i\n      ></span>\n    </p>\n    <Token v-if=\"nodeType == 'Token'\" :nodeData=\"nodeData\" />\n    <Stake v-else-if=\"nodeType == 'Stake'\" :nodeData=\"nodeData\" />\n    <Unstake v-else-if=\"nodeType == 'Unstake'\" :nodeData=\"nodeData\" />\n    <Vest v-else-if=\"nodeType == 'Vest'\" :nodeData=\"nodeData\" />\n  </div>\n</template>\n<script>\nimport { mapState } from \"vuex\";\nimport Token from \"../node/Token\";\nimport Stake from \"../node/Stake\";\nimport Unstake from \"../node/Unstake\";\nimport Vest from \"../node/Vest\";\nexport default {\n  props: [\"closeNodeEdit\"],\n  data() {\n    return {\n      nodeType: \"\",\n      nodeData: null,\n    };\n  },\n  methods: {\n    close() {\n      this.closeNodeEdit();\n    },\n  },\n  components: {\n    Token,\n    Stake,\n    Unstake,\n    Vest,\n  },\n  computed: {\n    ...mapState([\"editNode\"]),\n  },\n  watch: {\n    editNode(val) {\n      this.nodeType = val.getData().type;\n      this.nodeData = val.getData().nodeData;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.container {\n  position: fixed;\n  height: calc(100% - 180px);\n  width: 300px;\n  right: calc(100% - (100% - 250px) - 195px);\n  background-color: #ffffff;\n  overflow: scroll;\n  margin-top: 70px;\n  border-radius: 30px;\n  border: 2.5px solid rgb(232, 231, 231);\n  box-shadow: 0 0 1px rgba(219, 218, 218, 0.8);\n  .container-title {\n    margin: 2%;\n    background-color: #fff;\n    height: 32px;\n    line-height: 32px;\n    font-size: 13px;\n    font-weight: 700;\n    padding-left: 10px;\n    color: #666;\n    .node-edit-close-icon {\n      float: right;\n      margin-right: 10px;\n      font-size: 20px;\n      cursor: pointer;\n      &:hover {\n        color: #a09e9e;\n      }\n    }\n  }\n}\n</style>"]}]}